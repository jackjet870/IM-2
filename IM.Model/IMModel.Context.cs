//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IM.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IMEntities : DbContext
    {
        public IMEntities()
            : base("name=IMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<SalesRoom> SalesRooms { get; set; }
        public virtual DbSet<WhsMov> WhsMovs { get; set; }
    
        public virtual ObjectResult<GetCountries> USP_OR_GetCountries(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountries>("USP_OR_GetCountries", statusParameter);
        }
    
        public virtual ObjectResult<GuestPremanifestHost> GetPremanifestHost(Nullable<System.DateTime> date, string salesRoom)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestPremanifestHost>("GetPremanifestHost", dateParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<GetSalesRoom> USP_OR_GetSalesRoom(string salesRoom)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesRoom>("USP_OR_GetSalesRoom", salesRoomParameter);
        }
    
        public virtual ObjectResult<GetAgencies> USP_OR_GetAgencies(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAgencies>("USP_OR_GetAgencies", statusParameter);
        }
    
        public virtual ObjectResult<GetSalesRooms> USP_OR_GetSalesRooms(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesRooms>("USP_OR_GetSalesRooms", statusParameter);
        }
    
        public virtual ObjectResult<GetMarkets> USP_OR_GetMarkets(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMarkets>("USP_OR_GetMarkets", statusParameter);
        }
    
        public virtual ObjectResult<GetLeadSourcesByUser> USP_OR_GetLeadSourcesByUser(string user, string programs, string regions)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLeadSourcesByUser>("USP_OR_GetLeadSourcesByUser", userParameter, programsParameter, regionsParameter);
        }
    
        public virtual ObjectResult<GetSalesRoomsByUser> USP_OR_GetSalesRoomsByUser(string user, string regions)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSalesRoomsByUser>("USP_OR_GetSalesRoomsByUser", userParameter, regionsParameter);
        }
    
        public virtual ObjectResult<GetLanguages> USP_OR_GetLanguages(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLanguages>("USP_OR_GetLanguages", statusParameter);
        }
    
        public virtual ObjectResult<GetMailOutTextsByLeadSource> USP_OR_GetMailOutTextsByLeadSource(string mtls, Nullable<bool> mtA)
        {
            var mtlsParameter = mtls != null ?
                new ObjectParameter("mtls", mtls) :
                new ObjectParameter("mtls", typeof(string));
    
            var mtAParameter = mtA.HasValue ?
                new ObjectParameter("mtA", mtA) :
                new ObjectParameter("mtA", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMailOutTextsByLeadSource>("USP_OR_GetMailOutTextsByLeadSource", mtlsParameter, mtAParameter);
        }
    
        public virtual int spProcessMailOuts(string leadSource, Nullable<System.DateTime> date)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessMailOuts", leadSourceParameter, dateParameter);
        }
    
        public virtual ObjectResult<GetMailOuts> USP_OR_GetMailOuts(string guls, Nullable<System.DateTime> guCheckInD, Nullable<System.DateTime> guCheckOutD, Nullable<System.DateTime> guBookD)
        {
            var gulsParameter = guls != null ?
                new ObjectParameter("guls", guls) :
                new ObjectParameter("guls", typeof(string));
    
            var guCheckInDParameter = guCheckInD.HasValue ?
                new ObjectParameter("guCheckInD", guCheckInD) :
                new ObjectParameter("guCheckInD", typeof(System.DateTime));
    
            var guCheckOutDParameter = guCheckOutD.HasValue ?
                new ObjectParameter("guCheckOutD", guCheckOutD) :
                new ObjectParameter("guCheckOutD", typeof(System.DateTime));
    
            var guBookDParameter = guBookD.HasValue ?
                new ObjectParameter("guBookD", guBookD) :
                new ObjectParameter("guBookD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMailOuts>("USP_OR_GetMailOuts", gulsParameter, guCheckInDParameter, guCheckOutDParameter, guBookDParameter);
        }
    
        public virtual ObjectResult<GetGifts> USP_OR_GetGifts(string locations, Nullable<byte> status)
        {
            var locationsParameter = locations != null ?
                new ObjectParameter("Locations", locations) :
                new ObjectParameter("Locations", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGifts>("USP_OR_GetGifts", locationsParameter, statusParameter);
        }
    
        public virtual ObjectResult<GetWarehousesByUser> USP_OR_GetWarehousesByUser(string user, string regions)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWarehousesByUser>("USP_OR_GetWarehousesByUser", userParameter, regionsParameter);
        }
    
        public virtual ObjectResult<GetWhsMovs> USP_OR_GetWhsMovs(string wmwh, Nullable<System.DateTime> wmD)
        {
            var wmwhParameter = wmwh != null ?
                new ObjectParameter("wmwh", wmwh) :
                new ObjectParameter("wmwh", typeof(string));
    
            var wmDParameter = wmD.HasValue ?
                new ObjectParameter("wmD", wmD) :
                new ObjectParameter("wmD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWhsMovs>("USP_OR_GetWhsMovs", wmwhParameter, wmDParameter);
        }
    
        public virtual ObjectResult<userLogin> USP_OR_Login(Nullable<byte> loginType, string user, string place)
        {
            var loginTypeParameter = loginType.HasValue ?
                new ObjectParameter("LoginType", loginType) :
                new ObjectParameter("LoginType", typeof(byte));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<userLogin>("USP_OR_Login", loginTypeParameter, userParameter, placeParameter);
        }
    
        public virtual ObjectResult<USP_OR_GetPersonnel_Result> USP_OR_GetPersonnel(string leadSources, string salesRooms, string roles, Nullable<byte> status, string permission, string relationalOperator, Nullable<int> permissionLevel, string dept)
        {
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var permissionParameter = permission != null ?
                new ObjectParameter("Permission", permission) :
                new ObjectParameter("Permission", typeof(string));
    
            var relationalOperatorParameter = relationalOperator != null ?
                new ObjectParameter("RelationalOperator", relationalOperator) :
                new ObjectParameter("RelationalOperator", typeof(string));
    
            var permissionLevelParameter = permissionLevel.HasValue ?
                new ObjectParameter("PermissionLevel", permissionLevel) :
                new ObjectParameter("PermissionLevel", typeof(int));
    
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OR_GetPersonnel_Result>("USP_OR_GetPersonnel", leadSourcesParameter, salesRoomsParameter, rolesParameter, statusParameter, permissionParameter, relationalOperatorParameter, permissionLevelParameter, deptParameter);
        }
    
        public virtual ObjectResult<GetGuestsArrivals> USP_OR_GetArrivals(Nullable<System.DateTime> date, string leadSource, string markets, Nullable<int> available, Nullable<int> contacted, Nullable<int> invited, Nullable<int> onGroup)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var availableParameter = available.HasValue ?
                new ObjectParameter("Available", available) :
                new ObjectParameter("Available", typeof(int));
    
            var contactedParameter = contacted.HasValue ?
                new ObjectParameter("Contacted", contacted) :
                new ObjectParameter("Contacted", typeof(int));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(int));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGuestsArrivals>("USP_OR_GetArrivals", dateParameter, leadSourceParameter, marketsParameter, availableParameter, contactedParameter, invitedParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<GetGuestsAvailables> USP_OR_GetAvailables(Nullable<System.DateTime> currentDate, string leadSource, string markets, Nullable<int> contacted, Nullable<int> invited, Nullable<int> onGroup)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var contactedParameter = contacted.HasValue ?
                new ObjectParameter("Contacted", contacted) :
                new ObjectParameter("Contacted", typeof(int));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(int));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGuestsAvailables>("USP_OR_GetAvailables", currentDateParameter, leadSourceParameter, marketsParameter, contactedParameter, invitedParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<GetLocationsByUser> USP_OR_GetLocationsByUser(string user, string program)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocationsByUser>("USP_OR_GetLocationsByUser", userParameter, programParameter);
        }
    
        public virtual ObjectResult<GetGuestsPremanifest> USP_OR_GetPremanifest(Nullable<System.DateTime> date, string leadSource, string markets, Nullable<int> onGroup)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGuestsPremanifest>("USP_OR_GetPremanifest", dateParameter, leadSourceParameter, marketsParameter, onGroupParameter);
        }
    }
}
