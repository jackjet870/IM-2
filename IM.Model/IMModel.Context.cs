//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IM.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IMEntities : DbContext
    {
        public IMEntities()
            : base("name=IMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Agency> Agencies { get; set; }
        public virtual DbSet<Area> Areas { get; set; }
        public virtual DbSet<Assistance> Assistances { get; set; }
        public virtual DbSet<AssistanceStatus> AssistancesStatus { get; set; }
        public virtual DbSet<Bank> Banks { get; set; }
        public virtual DbSet<BookingDeposit> BookingDeposits { get; set; }
        public virtual DbSet<ChargeCalculationType> ChargeCalculationTypes { get; set; }
        public virtual DbSet<ChargeTo> ChargeTos { get; set; }
        public virtual DbSet<Club> Clubs { get; set; }
        public virtual DbSet<Computer> Computers { get; set; }
        public virtual DbSet<Contract> Contracts { get; set; }
        public virtual DbSet<Country> Countries { get; set; }
        public virtual DbSet<CreditCardType> CreditCardTypes { get; set; }
        public virtual DbSet<Currency> Currencies { get; set; }
        public virtual DbSet<CxCPayment> CxCPayments { get; set; }
        public virtual DbSet<DayOff> DaysOffs { get; set; }
        public virtual DbSet<AgesRange> AgesRanges { get; set; }
        public virtual DbSet<DepositRefund> DepositsRefunds { get; set; }
        public virtual DbSet<Dept> Depts { get; set; }
        public virtual DbSet<Desk> Desks { get; set; }
        public virtual DbSet<Efficiency> Efficiencies { get; set; }
        public virtual DbSet<EfficiencyType> EfficiencyTypes { get; set; }
        public virtual DbSet<ExchangeRate> ExchangeRates { get; set; }
        public virtual DbSet<ExchangeRateLog> ExchangeRatesLogs { get; set; }
        public virtual DbSet<FolioCXC> FoliosCXC { get; set; }
        public virtual DbSet<FolioCxCCancellation> FoliosCxCCancellation { get; set; }
        public virtual DbSet<FolioCxCPR> FoliosCxCPR { get; set; }
        public virtual DbSet<FolioInvitationOuthouse> FoliosInvitationsOuthouse { get; set; }
        public virtual DbSet<FolioInvitationOuthousePR> FoliosInvitationsOuthousePR { get; set; }
        public virtual DbSet<FolioInvitationOuthousePRCancellation> FoliosInvitationsOuthousePRCancellation { get; set; }
        public virtual DbSet<Gift> Gifts { get; set; }
        public virtual DbSet<GiftCategory> GiftsCategories { get; set; }
        public virtual DbSet<GiftInventory> GiftsInventories { get; set; }
        public virtual DbSet<GiftLog> GiftsLogs { get; set; }
        public virtual DbSet<GiftPackageItem> GiftsPackagesItems { get; set; }
        public virtual DbSet<GiftsReceipt> GiftsReceipts { get; set; }
        public virtual DbSet<GiftsReceiptDetail> GiftsReceiptsDetails { get; set; }
        public virtual DbSet<GiftsReceiptLog> GiftsReceiptsLogs { get; set; }
        public virtual DbSet<GiftsReceiptPackageItem> GiftsReceiptsPackagesItems { get; set; }
        public virtual DbSet<GiftsReceiptPayment> GiftsReceiptsPayments { get; set; }
        public virtual DbSet<Goal> Goals { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GuestLog> GuestsLogs { get; set; }
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<GuestCreditCard> GuestsCreditCards { get; set; }
        public virtual DbSet<GuestsGroup> GuestsGroups { get; set; }
        public virtual DbSet<GuestMovement> GuestsMovements { get; set; }
        public virtual DbSet<GuestMovementType> GuestsMovementsTypes { get; set; }
        public virtual DbSet<GuestPromotion> GuestsPromotions { get; set; }
        public virtual DbSet<GuestSisturPromotion> GuestsSisturPromotions { get; set; }
        public virtual DbSet<GuestStatus> GuestsStatus { get; set; }
        public virtual DbSet<GuestStatusType> GuestsStatusTypes { get; set; }
        public virtual DbSet<HotelGroup> HotelsGroups { get; set; }
        public virtual DbSet<Hotel> Hotels { get; set; }
        public virtual DbSet<InvitationGift> InvitationsGifts { get; set; }
        public virtual DbSet<InvitationText> InvitationsTexts { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<LeadSource> LeadSources { get; set; }
        public virtual DbSet<Location> Locations { get; set; }
        public virtual DbSet<LocationCategory> LocationsCategories { get; set; }
        public virtual DbSet<LoginLog> LoginsLogs { get; set; }
        public virtual DbSet<MailOut> MailOuts { get; set; }
        public virtual DbSet<MailOutText> MailOutTexts { get; set; }
        public virtual DbSet<Market> Markets { get; set; }
        public virtual DbSet<MealTicketFolio> MealTicketsFolios { get; set; }
        public virtual DbSet<MealTicket> MealTickets { get; set; }
        public virtual DbSet<MealTicketType> MealTicketTypes { get; set; }
        public virtual DbSet<MembershipGroup> MembershipsGroups { get; set; }
        public virtual DbSet<MembershipType> MembershipTypes { get; set; }
        public virtual DbSet<MaritalStatus> MaritalStatusList { get; set; }
        public virtual DbSet<NotBookingMotive> NotBookingMotives { get; set; }
        public virtual DbSet<Notice> Notices { get; set; }
        public virtual DbSet<Configuration> Configurations { get; set; }
        public virtual DbSet<PaymentPlace> PaymentPlaces { get; set; }
        public virtual DbSet<Payment> Payments { get; set; }
        public virtual DbSet<PaymentSchema> PaymentSchemas { get; set; }
        public virtual DbSet<PaymentType> PaymentTypes { get; set; }
        public virtual DbSet<Period> Periods { get; set; }
        public virtual DbSet<Permission> Permissions { get; set; }
        public virtual DbSet<PermissionLevel> PermissionsLevels { get; set; }
        public virtual DbSet<PersonnelAccess> PersonnelAccessList { get; set; }
        public virtual DbSet<Personnel> Personnels { get; set; }
        public virtual DbSet<PersonnelPermission> PersonnelPermissions { get; set; }
        public virtual DbSet<PersonnelStatus> PersonnelStatusList { get; set; }
        public virtual DbSet<PlaceType> PlaceTypes { get; set; }
        public virtual DbSet<Post> Posts { get; set; }
        public virtual DbSet<PostLog> PostsLogs { get; set; }
        public virtual DbSet<PRNote> PRNotes { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<ProductLegend> ProductsLegends { get; set; }
        public virtual DbSet<Program> Programs { get; set; }
        public virtual DbSet<RateType> RateTypes { get; set; }
        public virtual DbSet<ReasonCancellationFolio> ReasonsCancellationFolios { get; set; }
        public virtual DbSet<RefundType> RefundTypes { get; set; }
        public virtual DbSet<Region> Regions { get; set; }
        public virtual DbSet<ReimpresionMotive> ReimpresionMotives { get; set; }
        public virtual DbSet<ReportText> ReportTexts { get; set; }
        public virtual DbSet<Rep> Reps { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<RoomCharge> RoomCharges { get; set; }
        public virtual DbSet<RoomType> RoomTypes { get; set; }
        public virtual DbSet<Sale> Sales { get; set; }
        public virtual DbSet<SalesAmountRange> SalesAmountRanges { get; set; }
        public virtual DbSet<SaleLog> SalesLogs { get; set; }
        public virtual DbSet<SalesmanChange> SalesmenChanges { get; set; }
        public virtual DbSet<SalesRoom> SalesRooms { get; set; }
        public virtual DbSet<SalesRoomLog> SalesRoomsLogs { get; set; }
        public virtual DbSet<SalesSalesman> SalesSalesmen { get; set; }
        public virtual DbSet<SaleType> SaleTypes { get; set; }
        public virtual DbSet<SaleTypeCategory> SaleTypesCategories { get; set; }
        public virtual DbSet<ScoreRule> ScoreRules { get; set; }
        public virtual DbSet<ScoreRuleByLeadSource> ScoreRulesByLeadSources { get; set; }
        public virtual DbSet<ScoreRuleByLeadSourceDetail> ScoreRulesByLeadSourceDetails { get; set; }
        public virtual DbSet<ScoreRuleConcept> ScoreRulesConcepts { get; set; }
        public virtual DbSet<ScoreRuleDetail> ScoreRulesDetails { get; set; }
        public virtual DbSet<ScoreRuleType> ScoreRulesTypes { get; set; }
        public virtual DbSet<Season> Seasons { get; set; }
        public virtual DbSet<SeasonDate> SeasonsDates { get; set; }
        public virtual DbSet<SegmentByAgency> SegmentsByAgencies { get; set; }
        public virtual DbSet<SegmentByLeadSource> SegmentsByLeadSources { get; set; }
        public virtual DbSet<SegmentCategory> SegmentsCategories { get; set; }
        public virtual DbSet<ShowProgram> ShowPrograms { get; set; }
        public virtual DbSet<ShowProgramCategory> ShowProgramsCategories { get; set; }
        public virtual DbSet<ShowSalesman> ShowsSalesmen { get; set; }
        public virtual DbSet<SourcePayment> SourcePayments { get; set; }
        public virtual DbSet<TeamGuestServices> TeamsGuestServices { get; set; }
        public virtual DbSet<TeamLog> TeamsLogs { get; set; }
        public virtual DbSet<TeamSalesmen> TeamsSalesmen { get; set; }
        public virtual DbSet<TeamType> TeamsTypes { get; set; }
        public virtual DbSet<TourTime> TourTimes { get; set; }
        public virtual DbSet<TourTimeByDay> TourTimesByDay { get; set; }
        public virtual DbSet<TourTimeBySalesRoomWeekDay> TourTimesBySalesRoomWeekDay { get; set; }
        public virtual DbSet<TourTimesSchema> TourTimesSchemas { get; set; }
        public virtual DbSet<UnavailableMotive> UnavailableMotives { get; set; }
        public virtual DbSet<UnderPaymentMotive> UnderPaymentMotives { get; set; }
        public virtual DbSet<Warehouse> Warehouses { get; set; }
        public virtual DbSet<WeekDay> WeekDays { get; set; }
        public virtual DbSet<Wholesaler> Wholesalers { get; set; }
        public virtual DbSet<WarehouseMovement> WarehouseMovements { get; set; }
        public virtual DbSet<Zone> Zones { get; set; }
        public virtual DbSet<Transfer> Transfers { get; set; }
        public virtual DbSet<RefundTypeFolio> RefundTypesFolios { get; set; }
    
        public virtual ObjectResult<CountryShort> USP_OR_GetCountries(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CountryShort>("USP_OR_GetCountries", statusParameter);
        }
    
        public virtual ObjectResult<AgencyShort> USP_OR_GetAgencies(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AgencyShort>("USP_OR_GetAgencies", statusParameter);
        }
    
        public virtual ObjectResult<GuestArrival> USP_OR_GetArrivals(Nullable<System.DateTime> date, string leadSource, string markets, Nullable<int> available, Nullable<int> contacted, Nullable<int> invited, Nullable<int> onGroup)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var availableParameter = available.HasValue ?
                new ObjectParameter("Available", available) :
                new ObjectParameter("Available", typeof(int));
    
            var contactedParameter = contacted.HasValue ?
                new ObjectParameter("Contacted", contacted) :
                new ObjectParameter("Contacted", typeof(int));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(int));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestArrival>("USP_OR_GetArrivals", dateParameter, leadSourceParameter, marketsParameter, availableParameter, contactedParameter, invitedParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<GuestAvailable> USP_OR_GetAvailables(Nullable<System.DateTime> currentDate, string leadSource, string markets, Nullable<int> contacted, Nullable<int> invited, Nullable<int> onGroup)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var contactedParameter = contacted.HasValue ?
                new ObjectParameter("Contacted", contacted) :
                new ObjectParameter("Contacted", typeof(int));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(int));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestAvailable>("USP_OR_GetAvailables", currentDateParameter, leadSourceParameter, marketsParameter, contactedParameter, invitedParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<GuestPremanifest> USP_OR_GetPremanifest(Nullable<System.DateTime> date, string leadSource, string markets, Nullable<int> onGroup)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestPremanifest>("USP_OR_GetPremanifest", dateParameter, leadSourceParameter, marketsParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<GuestPremanifestHost> USP_OR_GetPremanifestHost(Nullable<System.DateTime> date, string salesRoom)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestPremanifestHost>("USP_OR_GetPremanifestHost", dateParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<GuestMailOut> USP_OR_GetGuestsMailOuts(string guls, Nullable<System.DateTime> guCheckInD, Nullable<System.DateTime> guCheckOutD, Nullable<System.DateTime> guBookD)
        {
            var gulsParameter = guls != null ?
                new ObjectParameter("guls", guls) :
                new ObjectParameter("guls", typeof(string));
    
            var guCheckInDParameter = guCheckInD.HasValue ?
                new ObjectParameter("guCheckInD", guCheckInD) :
                new ObjectParameter("guCheckInD", typeof(System.DateTime));
    
            var guCheckOutDParameter = guCheckOutD.HasValue ?
                new ObjectParameter("guCheckOutD", guCheckOutD) :
                new ObjectParameter("guCheckOutD", typeof(System.DateTime));
    
            var guBookDParameter = guBookD.HasValue ?
                new ObjectParameter("guBookD", guBookD) :
                new ObjectParameter("guBookD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestMailOut>("USP_OR_GetGuestsMailOuts", gulsParameter, guCheckInDParameter, guCheckOutDParameter, guBookDParameter);
        }
    
        public virtual ObjectResult<LanguageShort> USP_OR_GetLanguages(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LanguageShort>("USP_OR_GetLanguages", statusParameter);
        }
    
        public virtual ObjectResult<LeadSourceByUser> USP_OR_GetLeadSourcesByUser(string user, string programs, string regions)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeadSourceByUser>("USP_OR_GetLeadSourcesByUser", userParameter, programsParameter, regionsParameter);
        }
    
        public virtual int spProcessMailOuts(string leadSource, Nullable<System.DateTime> date)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spProcessMailOuts", leadSourceParameter, dateParameter);
        }
    
        public virtual ObjectResult<MarketShort> USP_OR_GetMarkets(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MarketShort>("USP_OR_GetMarkets", statusParameter);
        }
    
        public virtual ObjectResult<UserLogin> USP_OR_Login(Nullable<byte> loginType, string user, string place)
        {
            var loginTypeParameter = loginType.HasValue ?
                new ObjectParameter("LoginType", loginType) :
                new ObjectParameter("LoginType", typeof(byte));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin>("USP_OR_Login", loginTypeParameter, userParameter, placeParameter);
        }
    
        public virtual ObjectResult<SalesRoomByUser> USP_OR_GetSalesRoomsByUser(string user, string regions)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesRoomByUser>("USP_OR_GetSalesRoomsByUser", userParameter, regionsParameter);
        }
    
        public virtual ObjectResult<SalesRoomCloseDates> USP_OR_GetSalesRoom(string salesRoom)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesRoomCloseDates>("USP_OR_GetSalesRoom", salesRoomParameter);
        }
    
        public virtual ObjectResult<SalesRoomShort> USP_OR_GetSalesRooms(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesRoomShort>("USP_OR_GetSalesRooms", statusParameter);
        }
    
        public virtual ObjectResult<WarehouseMovementShort> USP_OR_GetWhsMovs(string wmwh, Nullable<System.DateTime> wmD)
        {
            var wmwhParameter = wmwh != null ?
                new ObjectParameter("wmwh", wmwh) :
                new ObjectParameter("wmwh", typeof(string));
    
            var wmDParameter = wmD.HasValue ?
                new ObjectParameter("wmD", wmD) :
                new ObjectParameter("wmD", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseMovementShort>("USP_OR_GetWhsMovs", wmwhParameter, wmDParameter);
        }
    
        public virtual ObjectResult<LocationByUser> USP_OR_GetLocationsByUser(string user, string program)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationByUser>("USP_OR_GetLocationsByUser", userParameter, programParameter);
        }
    
        public virtual ObjectResult<WarehouseByUser> USP_OR_GetWarehousesByUser(string user, string regions)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WarehouseByUser>("USP_OR_GetWarehousesByUser", userParameter, regionsParameter);
        }
    
        public virtual ObjectResult<GiftShort> USP_OR_GetGifts(string locations, Nullable<byte> status)
        {
            var locationsParameter = locations != null ?
                new ObjectParameter("Locations", locations) :
                new ObjectParameter("Locations", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftShort>("USP_OR_GetGifts", locationsParameter, statusParameter);
        }
    
        public virtual ObjectResult<PersonnelDayOff> USP_OR_GetPersonnelDaysOff(string teamType, string placeID)
        {
            var teamTypeParameter = teamType != null ?
                new ObjectParameter("TeamType", teamType) :
                new ObjectParameter("TeamType", typeof(string));
    
            var placeIDParameter = placeID != null ?
                new ObjectParameter("PlaceID", placeID) :
                new ObjectParameter("PlaceID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonnelDayOff>("USP_OR_GetPersonnelDaysOff", teamTypeParameter, placeIDParameter);
        }
    
        public virtual ObjectResult<RptPRStats> USP_OR_RptPRStats(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string salesRooms, string countries, string agencies, string markets)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var countriesParameter = countries != null ?
                new ObjectParameter("Countries", countries) :
                new ObjectParameter("Countries", typeof(string));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPRStats>("USP_OR_RptPRStats", dateFromParameter, dateToParameter, leadSourcesParameter, salesRoomsParameter, countriesParameter, agenciesParameter, marketsParameter);
        }
    
        public virtual int USP_OR_ActualizarFechasTemporadas(Nullable<int> currentYear)
        {
            var currentYearParameter = currentYear.HasValue ?
                new ObjectParameter("CurrentYear", currentYear) :
                new ObjectParameter("CurrentYear", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_ActualizarFechasTemporadas", currentYearParameter);
        }
    
        public virtual int USP_OR_CloseGiftsReceipts(string salesRoom, Nullable<System.DateTime> date)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CloseGiftsReceipts", salesRoomParameter, dateParameter);
        }
    
        public virtual int USP_OR_CloseMealTickets(string salesRoom, Nullable<System.DateTime> date)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CloseMealTickets", salesRoomParameter, dateParameter);
        }
    
        public virtual int USP_OR_CloseSales(string salesRoom, Nullable<System.DateTime> date)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CloseSales", salesRoomParameter, dateParameter);
        }
    
        public virtual int USP_OR_CloseShows(string salesRoom, Nullable<System.DateTime> date)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CloseShows", salesRoomParameter, dateParameter);
        }
    
        public virtual ObjectResult<ExchangeRateLogData> USP_OR_GetExchangeRateLog(string currency)
        {
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExchangeRateLogData>("USP_OR_GetExchangeRateLog", currencyParameter);
        }
    
        public virtual ObjectResult<ExchangeRateData> USP_OR_GetExchangeRatesWithPesosByDate(Nullable<System.DateTime> date)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExchangeRateData>("USP_OR_GetExchangeRatesWithPesosByDate", dateParameter);
        }
    
        public virtual ObjectResult<GraphProductionByPR> USP_OR_GraphProductionByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GraphProductionByPR>("USP_OR_GraphProductionByPR", dateFromParameter, dateToParameter, leadSourceParameter);
        }
    
        public virtual int USP_OR_InsertExchangeRate(Nullable<System.DateTime> currentDate)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_InsertExchangeRate", currentDateParameter);
        }
    
        public virtual int USP_OR_SaveSalesRoomLog(string salesRoom, Nullable<short> hoursDif, string changedBy)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var hoursDifParameter = hoursDif.HasValue ?
                new ObjectParameter("HoursDif", hoursDif) :
                new ObjectParameter("HoursDif", typeof(short));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveSalesRoomLog", salesRoomParameter, hoursDifParameter, changedByParameter);
        }
    
        public virtual ObjectResult<PersonnelShort> USP_OR_GetPersonnel(string leadSources, string salesRooms, string roles, Nullable<byte> status, string permission, string relationalOperator, Nullable<int> permissionLevel, string dept, string idPersonnel)
        {
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var permissionParameter = permission != null ?
                new ObjectParameter("Permission", permission) :
                new ObjectParameter("Permission", typeof(string));
    
            var relationalOperatorParameter = relationalOperator != null ?
                new ObjectParameter("RelationalOperator", relationalOperator) :
                new ObjectParameter("RelationalOperator", typeof(string));
    
            var permissionLevelParameter = permissionLevel.HasValue ?
                new ObjectParameter("PermissionLevel", permissionLevel) :
                new ObjectParameter("PermissionLevel", typeof(int));
    
            var deptParameter = dept != null ?
                new ObjectParameter("Dept", dept) :
                new ObjectParameter("Dept", typeof(string));
    
            var idPersonnelParameter = idPersonnel != null ?
                new ObjectParameter("IdPersonnel", idPersonnel) :
                new ObjectParameter("IdPersonnel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonnelShort>("USP_OR_GetPersonnel", leadSourcesParameter, salesRoomsParameter, rolesParameter, statusParameter, permissionParameter, relationalOperatorParameter, permissionLevelParameter, deptParameter, idPersonnelParameter);
        }
    
        public virtual ObjectResult<SalesRoomLogData> USP_OR_GetSalesRoomLog(string salesRoom)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesRoomLogData>("USP_OR_GetSalesRoomLog", salesRoomParameter);
        }
    
        public virtual ObjectResult<RptBookingsBySalesRoomProgramTime> USP_OR_RptBookingsBySalesRoomProgramTime(Nullable<System.DateTime> date, string salesRooms)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptBookingsBySalesRoomProgramTime>("USP_OR_RptBookingsBySalesRoomProgramTime", dateParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<GuestLogData> USP_OR_GetGuestLog(Nullable<int> guest)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestLogData>("USP_OR_GetGuestLog", guestParameter);
        }
    
        public virtual int USP_OR_SaveLoginLog(string location, string user, string computerName)
        {
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var computerNameParameter = computerName != null ?
                new ObjectParameter("ComputerName", computerName) :
                new ObjectParameter("ComputerName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveLoginLog", locationParameter, userParameter, computerNameParameter);
        }
    
        public virtual ObjectResult<GuestAssigned> USP_OR_GetGuestsAssigned(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string pRs, string markets)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestAssigned>("USP_OR_GetGuestsAssigned", dateFromParameter, dateToParameter, leadSourceParameter, pRsParameter, marketsParameter);
        }
    
        public virtual ObjectResult<GuestUnassigned> USP_OR_GetGuestsUnassigned(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string markets, Nullable<bool> onlyAvailables)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var onlyAvailablesParameter = onlyAvailables.HasValue ?
                new ObjectParameter("OnlyAvailables", onlyAvailables) :
                new ObjectParameter("OnlyAvailables", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestUnassigned>("USP_OR_GetGuestsUnassigned", dateFromParameter, dateToParameter, leadSourceParameter, marketsParameter, onlyAvailablesParameter);
        }
    
        public virtual ObjectResult<PRAssigned> USP_OR_GetPRsAssigned(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string markets, Nullable<bool> pRGuests, Nullable<bool> pRMembers)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var pRGuestsParameter = pRGuests.HasValue ?
                new ObjectParameter("PRGuests", pRGuests) :
                new ObjectParameter("PRGuests", typeof(bool));
    
            var pRMembersParameter = pRMembers.HasValue ?
                new ObjectParameter("PRMembers", pRMembers) :
                new ObjectParameter("PRMembers", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PRAssigned>("USP_OR_GetPRsAssigned", dateFromParameter, dateToParameter, leadSourceParameter, marketsParameter, pRGuestsParameter, pRMembersParameter);
        }
    
        public virtual ObjectResult<TourTimeAvailable> USP_OR_GetTourTimesAvailables(string leadSource, string salesRoom, Nullable<System.DateTime> date, Nullable<System.DateTime> dateOriginal, Nullable<System.DateTime> timeOriginal, Nullable<System.DateTime> currentDate)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var dateOriginalParameter = dateOriginal.HasValue ?
                new ObjectParameter("DateOriginal", dateOriginal) :
                new ObjectParameter("DateOriginal", typeof(System.DateTime));
    
            var timeOriginalParameter = timeOriginal.HasValue ?
                new ObjectParameter("TimeOriginal", timeOriginal) :
                new ObjectParameter("TimeOriginal", typeof(System.DateTime));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TourTimeAvailable>("USP_OR_GetTourTimesAvailables", leadSourceParameter, salesRoomParameter, dateParameter, dateOriginalParameter, timeOriginalParameter, currentDateParameter);
        }
    
        public virtual int USP_OR_SaveGuestLog(Nullable<int> guest, Nullable<short> hoursDif, string changedBy)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var hoursDifParameter = hoursDif.HasValue ?
                new ObjectParameter("HoursDif", hoursDif) :
                new ObjectParameter("HoursDif", typeof(short));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveGuestLog", guestParameter, hoursDifParameter, changedByParameter);
        }
    
        public virtual int USP_OR_SaveGuestMovement(Nullable<int> guest, string guestMovementType, string changedBy, string computerName, string iPAddress)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var guestMovementTypeParameter = guestMovementType != null ?
                new ObjectParameter("GuestMovementType", guestMovementType) :
                new ObjectParameter("GuestMovementType", typeof(string));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var computerNameParameter = computerName != null ?
                new ObjectParameter("ComputerName", computerName) :
                new ObjectParameter("ComputerName", typeof(string));
    
            var iPAddressParameter = iPAddress != null ?
                new ObjectParameter("IPAddress", iPAddress) :
                new ObjectParameter("IPAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveGuestMovement", guestParameter, guestMovementTypeParameter, changedByParameter, computerNameParameter, iPAddressParameter);
        }
    
        public virtual int USP_OR_SaveExchangeRateLog(string currency, Nullable<System.DateTime> date, Nullable<short> hoursDif, string changedBy)
        {
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var hoursDifParameter = hoursDif.HasValue ?
                new ObjectParameter("HoursDif", hoursDif) :
                new ObjectParameter("HoursDif", typeof(short));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveExchangeRateLog", currencyParameter, dateParameter, hoursDifParameter, changedByParameter);
        }
    
        public virtual ObjectResult<GuestByPR> USP_OR_GetGuestsByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string pR, Nullable<bool> considerAssign, Nullable<bool> considerContact, Nullable<bool> considerFollowUp, Nullable<bool> considerInvit, Nullable<bool> considerShow, Nullable<bool> considerSale, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var considerAssignParameter = considerAssign.HasValue ?
                new ObjectParameter("ConsiderAssign", considerAssign) :
                new ObjectParameter("ConsiderAssign", typeof(bool));
    
            var considerContactParameter = considerContact.HasValue ?
                new ObjectParameter("ConsiderContact", considerContact) :
                new ObjectParameter("ConsiderContact", typeof(bool));
    
            var considerFollowUpParameter = considerFollowUp.HasValue ?
                new ObjectParameter("ConsiderFollowUp", considerFollowUp) :
                new ObjectParameter("ConsiderFollowUp", typeof(bool));
    
            var considerInvitParameter = considerInvit.HasValue ?
                new ObjectParameter("ConsiderInvit", considerInvit) :
                new ObjectParameter("ConsiderInvit", typeof(bool));
    
            var considerShowParameter = considerShow.HasValue ?
                new ObjectParameter("ConsiderShow", considerShow) :
                new ObjectParameter("ConsiderShow", typeof(bool));
    
            var considerSaleParameter = considerSale.HasValue ?
                new ObjectParameter("ConsiderSale", considerSale) :
                new ObjectParameter("ConsiderSale", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestByPR>("USP_OR_GetGuestsByPR", dateFromParameter, dateToParameter, leadSourceParameter, pRParameter, considerAssignParameter, considerContactParameter, considerFollowUpParameter, considerInvitParameter, considerShowParameter, considerSaleParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<GuestSearched> USP_OR_GetGuests(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string name, string roomNumber, string reservation, Nullable<int> guestID)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var roomNumberParameter = roomNumber != null ?
                new ObjectParameter("RoomNumber", roomNumber) :
                new ObjectParameter("RoomNumber", typeof(string));
    
            var reservationParameter = reservation != null ?
                new ObjectParameter("Reservation", reservation) :
                new ObjectParameter("Reservation", typeof(string));
    
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestSearched>("USP_OR_GetGuests", dateFromParameter, dateToParameter, leadSourceParameter, nameParameter, roomNumberParameter, reservationParameter, guestIDParameter);
        }
    
        public virtual ObjectResult<RptBookingsBySalesRoomProgramLeadSourceTime> USP_OR_RptBookingsBySalesRoomProgramLeadSourceTime(Nullable<System.DateTime> date, string salesRooms)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptBookingsBySalesRoomProgramLeadSourceTime>("USP_OR_RptBookingsBySalesRoomProgramLeadSourceTime", dateParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptPersonnel> USP_OR_RptPersonnel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPersonnel>("USP_OR_RptPersonnel");
        }
    
        public virtual ObjectResult<string> USP_OR_ValidateFolioInvitationOutside(string serie, Nullable<int> number, Nullable<int> guestID)
        {
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_OR_ValidateFolioInvitationOutside", serieParameter, numberParameter, guestIDParameter);
        }
    
        public virtual ObjectResult<string> USP_OR_ValidateFolioReservation(string leadSource, string folio, Nullable<int> guestID)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var folioParameter = folio != null ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(string));
    
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_OR_ValidateFolioReservation", leadSourceParameter, folioParameter, guestIDParameter);
        }
    
        public virtual ObjectResult<RptGifts> USP_OR_RptGifts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGifts>("USP_OR_RptGifts");
        }
    
        public virtual ObjectResult<AssistanceData> USP_OR_GetAssistance(string placeType, string place, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var placeTypeParameter = placeType != null ?
                new ObjectParameter("PlaceType", placeType) :
                new ObjectParameter("PlaceType", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AssistanceData>("USP_OR_GetAssistance", placeTypeParameter, placeParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<PersonnelAssistance> USP_OR_GetPersonnelAssistance(string placeType, string place, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var placeTypeParameter = placeType != null ?
                new ObjectParameter("PlaceType", placeType) :
                new ObjectParameter("PlaceType", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonnelAssistance>("USP_OR_GetPersonnelAssistance", placeTypeParameter, placeParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<RptAssignment> USP_OR_RptAssignment(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string markets)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAssignment>("USP_OR_RptAssignment", dateFromParameter, dateToParameter, leadSourceParameter, marketsParameter);
        }
    
        public virtual ObjectResult<RptAssignmentArrivals> USP_OR_RptAssignmentArrivals(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string markets)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAssignmentArrivals>("USP_OR_RptAssignmentArrivals", dateFromParameter, dateToParameter, leadSourceParameter, marketsParameter);
        }
    
        public virtual ObjectResult<RptAssignmentByPR> USP_OR_RptAssignmentByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string markets, string pR)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAssignmentByPR>("USP_OR_RptAssignmentByPR", dateFromParameter, dateToParameter, leadSourceParameter, marketsParameter, pRParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> USP_OR_ValidateFolioCXC(Nullable<int> numberFrom, Nullable<int> numberTo, Nullable<bool> active, Nullable<int> action)
        {
            var numberFromParameter = numberFrom.HasValue ?
                new ObjectParameter("NumberFrom", numberFrom) :
                new ObjectParameter("NumberFrom", typeof(int));
    
            var numberToParameter = numberTo.HasValue ?
                new ObjectParameter("NumberTo", numberTo) :
                new ObjectParameter("NumberTo", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("USP_OR_ValidateFolioCXC", numberFromParameter, numberToParameter, activeParameter, actionParameter);
        }
    
        public virtual ObjectResult<RptCxC> USP_OR_RptCxC(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCxC>("USP_OR_RptCxC", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptCxCDeposits> USP_OR_RptCxCDeposits(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCxCDeposits>("USP_OR_RptCxCDeposits", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptCxCGifts> USP_OR_RptCxCGifts(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCxCGifts>("USP_OR_RptCxCGifts", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptCxCNotAuthorized> USP_OR_RptCxCNotAuthorized(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCxCNotAuthorized>("USP_OR_RptCxCNotAuthorized", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<SaleByCloser> USP_OR_GetSalesByCloser(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string closer)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var closerParameter = closer != null ?
                new ObjectParameter("Closer", closer) :
                new ObjectParameter("Closer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleByCloser>("USP_OR_GetSalesByCloser", dateFromParameter, dateToParameter, salesRoomParameter, closerParameter);
        }
    
        public virtual ObjectResult<SaleByLiner> USP_OR_GetSalesByLiner(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string liner)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var linerParameter = liner != null ?
                new ObjectParameter("Liner", liner) :
                new ObjectParameter("Liner", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleByLiner>("USP_OR_GetSalesByLiner", dateFromParameter, dateToParameter, salesRoomParameter, linerParameter);
        }
    
        public virtual ObjectResult<SaleByPR> USP_OR_GetSalesByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string pR, Nullable<bool> searchBySalePR)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var searchBySalePRParameter = searchBySalePR.HasValue ?
                new ObjectParameter("SearchBySalePR", searchBySalePR) :
                new ObjectParameter("SearchBySalePR", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleByPR>("USP_OR_GetSalesByPR", dateFromParameter, dateToParameter, leadSourceParameter, pRParameter, searchBySalePRParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> USP_OR_ValidateFolioInvitationsOutside(string serie, Nullable<int> numberFrom, Nullable<int> numberTo, Nullable<bool> active, Nullable<int> action)
        {
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var numberFromParameter = numberFrom.HasValue ?
                new ObjectParameter("NumberFrom", numberFrom) :
                new ObjectParameter("NumberFrom", typeof(int));
    
            var numberToParameter = numberTo.HasValue ?
                new ObjectParameter("NumberTo", numberTo) :
                new ObjectParameter("NumberTo", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("USP_OR_ValidateFolioInvitationsOutside", serieParameter, numberFromParameter, numberToParameter, activeParameter, actionParameter);
        }
    
        public virtual ObjectResult<RptCostByPR> USP_OR_RptCostByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCostByPR>("USP_OR_RptCostByPR", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter);
        }
    
        public virtual ObjectResult<RptCostByPRWithDetailGifts> USP_OR_RptCostByPRWithDetailGifts(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> detailGifts)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var detailGiftsParameter = detailGifts.HasValue ?
                new ObjectParameter("DetailGifts", detailGifts) :
                new ObjectParameter("DetailGifts", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCostByPRWithDetailGifts>("USP_OR_RptCostByPRWithDetailGifts", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, detailGiftsParameter);
        }
    
        public virtual ObjectResult<ValidationData> USP_OR_ValidateChangedBy(string changedBy, string password, string placeType, string placeID, string userType, string pR)
        {
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var placeTypeParameter = placeType != null ?
                new ObjectParameter("PlaceType", placeType) :
                new ObjectParameter("PlaceType", typeof(string));
    
            var placeIDParameter = placeID != null ?
                new ObjectParameter("PlaceID", placeID) :
                new ObjectParameter("PlaceID", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationData>("USP_OR_ValidateChangedBy", changedByParameter, passwordParameter, placeTypeParameter, placeIDParameter, userTypeParameter, pRParameter);
        }
    
        public virtual int USP_OR_UpdateMealTicketFolio(string salesRoom, string mealTicketType, string folio, Nullable<int> rateType)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var mealTicketTypeParameter = mealTicketType != null ?
                new ObjectParameter("MealTicketType", mealTicketType) :
                new ObjectParameter("MealTicketType", typeof(string));
    
            var folioParameter = folio != null ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(string));
    
            var rateTypeParameter = rateType.HasValue ?
                new ObjectParameter("RateType", rateType) :
                new ObjectParameter("RateType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateMealTicketFolio", salesRoomParameter, mealTicketTypeParameter, folioParameter, rateTypeParameter);
        }
    
        public virtual ObjectResult<RptDeposits> USP_OR_RptDeposits(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDeposits>("USP_OR_RptDeposits", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptDepositsBurned> USP_OR_RptDepositsBurned(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsBurned>("USP_OR_RptDepositsBurned", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptDepositsBurnedByResort> USP_OR_RptDepositsBurnedByResort(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsBurnedByResort>("USP_OR_RptDepositsBurnedByResort", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptDepositsPaid> USP_OR_RptDepositsPaid(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsPaid>("USP_OR_RptDepositsPaid", dateFromParameter, dateToParameter, leadSourcesParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptFollowUpByAgency> USP_OR_RptFollowUpByAgency(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFollowUpByAgency>("USP_OR_RptFollowUpByAgency", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptFollowUpByPR> USP_OR_RptFollowUpByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFollowUpByPR>("USP_OR_RptFollowUpByPR", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptDepositsPaymentByPR> USP_OR_RptDepositsPaymentByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, string paymentTypes, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var paymentTypesParameter = paymentTypes != null ?
                new ObjectParameter("PaymentTypes", paymentTypes) :
                new ObjectParameter("PaymentTypes", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsPaymentByPR>("USP_OR_RptDepositsPaymentByPR", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, paymentTypesParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptGiftsReceivedBySR> USP_OR_RptGiftsReceivedBySR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string chargeTo, string gifts)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var chargeToParameter = chargeTo != null ?
                new ObjectParameter("ChargeTo", chargeTo) :
                new ObjectParameter("ChargeTo", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsReceivedBySR>("USP_OR_RptGiftsReceivedBySR", dateFromParameter, dateToParameter, leadSourcesParameter, chargeToParameter, giftsParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgeOuthouse> USP_OR_RptProductionByAgeOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgeOuthouse>("USP_OR_RptProductionByAgeOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgeSalesRoomOuthouse> USP_OR_RptProductionByAgeSalesRoomOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgeSalesRoomOuthouse>("USP_OR_RptProductionByAgeSalesRoomOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<GraphTotals> USP_OR_GraphNotBookingArrivals(Nullable<System.DateTime> dateFromWeek, string leadSources)
        {
            var dateFromWeekParameter = dateFromWeek.HasValue ?
                new ObjectParameter("DateFromWeek", dateFromWeek) :
                new ObjectParameter("DateFromWeek", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GraphTotals>("USP_OR_GraphNotBookingArrivals", dateFromWeekParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgeInhouse> USP_OR_RptProductionByAgeInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgeInhouse>("USP_OR_RptProductionByAgeInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgeMarketOriginallyAvailableInhouse> USP_OR_RptProductionByAgeMarketOriginallyAvailableInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgeMarketOriginallyAvailableInhouse>("USP_OR_RptProductionByAgeMarketOriginallyAvailableInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgencyInhouse> USP_OR_RptProductionByAgencyInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> considerNights, Nullable<int> nightsFrom, Nullable<int> nightsTo, Nullable<bool> salesByMembershipType, Nullable<bool> onlyQuinellas, Nullable<int> external, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var considerNightsParameter = considerNights.HasValue ?
                new ObjectParameter("ConsiderNights", considerNights) :
                new ObjectParameter("ConsiderNights", typeof(bool));
    
            var nightsFromParameter = nightsFrom.HasValue ?
                new ObjectParameter("NightsFrom", nightsFrom) :
                new ObjectParameter("NightsFrom", typeof(int));
    
            var nightsToParameter = nightsTo.HasValue ?
                new ObjectParameter("NightsTo", nightsTo) :
                new ObjectParameter("NightsTo", typeof(int));
    
            var salesByMembershipTypeParameter = salesByMembershipType.HasValue ?
                new ObjectParameter("SalesByMembershipType", salesByMembershipType) :
                new ObjectParameter("SalesByMembershipType", typeof(bool));
    
            var onlyQuinellasParameter = onlyQuinellas.HasValue ?
                new ObjectParameter("OnlyQuinellas", onlyQuinellas) :
                new ObjectParameter("OnlyQuinellas", typeof(bool));
    
            var externalParameter = external.HasValue ?
                new ObjectParameter("External", external) :
                new ObjectParameter("External", typeof(int));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgencyInhouse>("USP_OR_RptProductionByAgencyInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, considerNightsParameter, nightsFromParameter, nightsToParameter, salesByMembershipTypeParameter, onlyQuinellasParameter, externalParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByContractAgencyInhouse> USP_OR_RptProductionByContractAgencyInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string markets, string agencies, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByContractAgencyInhouse>("USP_OR_RptProductionByContractAgencyInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, marketsParameter, agenciesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByContractAgencyMarketOriginallyAvailableInhouse> USP_OR_RptProductionByContractAgencyMarketOriginallyAvailableInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string markets, string agencies, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByContractAgencyMarketOriginallyAvailableInhouse>("USP_OR_RptProductionByContractAgencyMarketOriginallyAvailableInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, marketsParameter, agenciesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<LeadSourceShort> USP_OR_GetLeadSourcesByZoneBoss(string zone)
        {
            var zoneParameter = zone != null ?
                new ObjectParameter("Zone", zone) :
                new ObjectParameter("Zone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LeadSourceShort>("USP_OR_GetLeadSourcesByZoneBoss", zoneParameter);
        }
    
        public virtual ObjectResult<ZoneTransfer> USP_OR_GetZonesTransfer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ZoneTransfer>("USP_OR_GetZonesTransfer");
        }
    
        public virtual ObjectResult<TransferStartData> USP_OR_TransferStart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TransferStartData>("USP_OR_TransferStart");
        }
    
        public virtual int USP_OR_TransferStopZone(string zone)
        {
            var zoneParameter = zone != null ?
                new ObjectParameter("Zone", zone) :
                new ObjectParameter("Zone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferStopZone", zoneParameter);
        }
    
        public virtual int USP_OR_TransferUpdateGuestsAvailables(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsAvailables", dateFromParameter, dateToParameter);
        }
    
        public virtual int USP_OR_UpdateExchangeRate(Nullable<System.DateTime> date, string currency, Nullable<decimal> exchangeRate)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var exchangeRateParameter = exchangeRate.HasValue ?
                new ObjectParameter("ExchangeRate", exchangeRate) :
                new ObjectParameter("ExchangeRate", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateExchangeRate", dateParameter, currencyParameter, exchangeRateParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptsShort> USP_OR_GetGiftsReceipts(Nullable<int> guest, string salesRoom, Nullable<int> receipt, string folio, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string name, string reservation)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var folioParameter = folio != null ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var reservationParameter = reservation != null ?
                new ObjectParameter("Reservation", reservation) :
                new ObjectParameter("Reservation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptsShort>("USP_OR_GetGiftsReceipts", guestParameter, salesRoomParameter, receiptParameter, folioParameter, dateFromParameter, dateToParameter, nameParameter, reservationParameter);
        }
    
        public virtual ObjectResult<CxCPaymentShort> USP_OR_GetCxCPayments(string giftReceiptID)
        {
            var giftReceiptIDParameter = giftReceiptID != null ?
                new ObjectParameter("GiftReceiptID", giftReceiptID) :
                new ObjectParameter("GiftReceiptID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CxCPaymentShort>("USP_OR_GetCxCPayments", giftReceiptIDParameter);
        }
    
        public virtual ObjectResult<GiftInvitationWithoutReceipt> USP_OR_GetGiftsInvitationWithoutReceipt(Nullable<int> guest, Nullable<bool> package)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var packageParameter = package.HasValue ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftInvitationWithoutReceipt>("USP_OR_GetGiftsInvitationWithoutReceipt", guestParameter, packageParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptDetailShort> USP_OR_GetGiftsReceiptDetail(Nullable<int> receipt, Nullable<bool> package)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var packageParameter = package.HasValue ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptDetailShort>("USP_OR_GetGiftsReceiptDetail", receiptParameter, packageParameter);
        }
    
        public virtual ObjectResult<GuestShowNoPresentedInvitation> USP_OR_GetGuestsShowNoPresentedInvitation(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestShowNoPresentedInvitation>("USP_OR_GetGuestsShowNoPresentedInvitation", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptPaymentShort> USP_OR_GetGiftsReceiptPayments(Nullable<int> receipt)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptPaymentShort>("USP_OR_GetGiftsReceiptPayments", receiptParameter);
        }
    
        public virtual ObjectResult<string> USP_OR_Occupation(Nullable<System.DateTime> date, string lS)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var lSParameter = lS != null ?
                new ObjectParameter("LS", lS) :
                new ObjectParameter("LS", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_OR_Occupation", dateParameter, lSParameter);
        }
    
        public virtual ObjectResult<RptInvitation> USP_OR_RptInvitation(Nullable<int> guestID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptInvitation>("USP_OR_RptInvitation", guestIDParameter);
        }
    
        public virtual ObjectResult<RptDailyGiftSimple> USP_IM_RptDailyGiftSimple(Nullable<System.DateTime> date, string salesRooms)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDailyGiftSimple>("USP_IM_RptDailyGiftSimple", dateParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptWeeklyGiftsItemsSimple> USP_IM_RptWeeklyGiftsItemsSimple(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string salesRooms)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptWeeklyGiftsItemsSimple>("USP_IM_RptWeeklyGiftsItemsSimple", startDateParameter, endDateParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptGuestCeco> USP_OR_RptGuestCeco(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGuestCeco>("USP_OR_RptGuestCeco", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptGuestsNoBuyers> USP_OR_RptGuestsNoBuyers(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGuestsNoBuyers>("USP_OR_RptGuestsNoBuyers", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptGuestsNoShows> USP_OR_RptGuestsNoShows(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGuestsNoShows>("USP_OR_RptGuestsNoShows", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptInOut> USP_OR_RptInOut(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptInOut>("USP_OR_RptInOut", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<GuestShort> USP_OR_GetGuestById(Nullable<int> guest)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestShort>("USP_OR_GetGuestById", guestParameter);
        }
    
        public virtual ObjectResult<RptMealTickets> USP_OR_RptMealTickets(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, Nullable<bool> cancelled, string rateTypes)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var cancelledParameter = cancelled.HasValue ?
                new ObjectParameter("Cancelled", cancelled) :
                new ObjectParameter("Cancelled", typeof(bool));
    
            var rateTypesParameter = rateTypes != null ?
                new ObjectParameter("RateTypes", rateTypes) :
                new ObjectParameter("RateTypes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMealTickets>("USP_OR_RptMealTickets", dateFromParameter, dateToParameter, salesRoomsParameter, cancelledParameter, rateTypesParameter);
        }
    
        public virtual ObjectResult<RptMealTicketsCost> USP_OR_RptMealTicketsCost(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string rateTypes)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var rateTypesParameter = rateTypes != null ?
                new ObjectParameter("RateTypes", rateTypes) :
                new ObjectParameter("RateTypes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMealTicketsCost>("USP_OR_RptMealTicketsCost", dateFromParameter, dateToParameter, salesRoomsParameter, rateTypesParameter);
        }
    
        public virtual ObjectResult<RptMemberships> USP_OR_RptMemberships(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMemberships>("USP_OR_RptMemberships", dateFromParameter, dateToParameter, salesRoomsParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptMembershipsByAgencyMarket> USP_OR_RptMembershipsByAgencyMarket(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMembershipsByAgencyMarket>("USP_OR_RptMembershipsByAgencyMarket", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptMembershipsByHost> USP_OR_RptMembershipsByHost(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptMembershipsByHost>("USP_OR_RptMembershipsByHost", dateFromParameter, dateToParameter, salesRoomsParameter, leadSourcesParameter);
        }
    
        public virtual int USP_OR_TransferAddAgencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddAgencies");
        }
    
        public virtual int USP_OR_TransferAddAgenciesHotel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddAgenciesHotel");
        }
    
        public virtual int USP_OR_TransferAddContracts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddContracts");
        }
    
        public virtual int USP_OR_TransferAddCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddCountries");
        }
    
        public virtual int USP_OR_TransferAddCountriesHotel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddCountriesHotel");
        }
    
        public virtual int USP_OR_TransferAddGroups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddGroups");
        }
    
        public virtual ObjectResult<Nullable<int>> USP_OR_TransferAddGuests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_OR_TransferAddGuests");
        }
    
        public virtual int USP_OR_TransferAddRoomTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferAddRoomTypes");
        }
    
        public virtual int USP_OR_TransferDeleteReservationsCancelled()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferDeleteReservationsCancelled");
        }
    
        public virtual int USP_OR_TransferStop()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferStop");
        }
    
        public virtual int USP_OR_TransferUpdateAgenciesHotelNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateAgenciesHotelNames");
        }
    
        public virtual int USP_OR_TransferUpdateAgenciesNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateAgenciesNames");
        }
    
        public virtual int USP_OR_TransferUpdateContractsNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateContractsNames");
        }
    
        public virtual int USP_OR_TransferUpdateCountriesHotelNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateCountriesHotelNames");
        }
    
        public virtual int USP_OR_TransferUpdateCountriesNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateCountriesNames");
        }
    
        public virtual int USP_OR_TransferUpdateGroupsNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGroupsNames");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsAgencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsAgencies");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsAges()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsAges");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsAvailabilityUnavailableMotives()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsAvailabilityUnavailableMotives");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsBirthDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsBirthDates");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCheckInDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCheckInDates");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCheckIns()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCheckIns");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCheckOutDates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCheckOutDates");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCheckOutsEarly()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCheckOutsEarly");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCities()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCities");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsContracts()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsContracts");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCountries");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsCreditCards()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsCreditCards");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsEmails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsEmails");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsFirstNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsFirstNames");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsGuestTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsGuestTypes");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsIdProfileOpera()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsIdProfileOpera");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsLastNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsLastNames");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsMarkets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsMarkets");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsPax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsPax");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsReservationTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsReservationTypes");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsRoomNumbers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsRoomNumbers");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsRoomTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsRoomTypes");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsStates()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsStates");
        }
    
        public virtual int USP_OR_TransferUpdateGuestsUnavailableMotives1NightRevert()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateGuestsUnavailableMotives1NightRevert");
        }
    
        public virtual int USP_OR_TransferUpdateRoomTypesNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateRoomTypesNames");
        }
    
        public virtual int USP_OR_TransferUpdateTransferAgencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferAgencies");
        }
    
        public virtual int USP_OR_TransferUpdateTransferAvailability()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferAvailability");
        }
    
        public virtual int USP_OR_TransferUpdateTransferCountries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferCountries");
        }
    
        public virtual int USP_OR_TransferUpdateTransferLanguages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferLanguages");
        }
    
        public virtual int USP_OR_TransferUpdateTransferMarkets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferMarkets");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesBy1Night()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesBy1Night");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesBy2Nights()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesBy2Nights");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByAgency()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByAgency");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByContract()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByContract");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByCountry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByCountry");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByGroups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByGroups");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByNewMember()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByNewMember");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByPax()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByPax");
        }
    
        public virtual int USP_OR_TransferUpdateTransferUnavailableMotivesByTransfer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferUpdateTransferUnavailableMotivesByTransfer");
        }
    
        public virtual ObjectResult<RptProductionByCoupleTypeInhouse> USP_OR_RptProductionByCoupleTypeInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByCoupleTypeInhouse>("USP_OR_RptProductionByCoupleTypeInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByDeskInhouse> USP_OR_RptProductionByDeskInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByDeskInhouse>("USP_OR_RptProductionByDeskInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByGiftQuantity> USP_OR_RptProductionByGiftQuantity(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string giftsQuantitys, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var giftsQuantitysParameter = giftsQuantitys != null ?
                new ObjectParameter("GiftsQuantitys", giftsQuantitys) :
                new ObjectParameter("GiftsQuantitys", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByGiftQuantity>("USP_OR_RptProductionByGiftQuantity", dateFromParameter, dateToParameter, leadSourcesParameter, giftsQuantitysParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByGroupInhouse> USP_OR_RptProductionByGroupInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByGroupInhouse>("USP_OR_RptProductionByGroupInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByGuestStatusInhouse> USP_OR_RptProductionByGuestStatusInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByGuestStatusInhouse>("USP_OR_RptProductionByGuestStatusInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByMemberTypeAgencyInhouse> USP_OR_RptProductionByMemberTypeAgencyInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string markets, string agencies, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByMemberTypeAgencyInhouse>("USP_OR_RptProductionByMemberTypeAgencyInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, marketsParameter, agenciesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByMemberTypeAgencyMarketOriginallyAvailableInhouse> USP_OR_RptProductionByMemberTypeAgencyMarketOriginallyAvailableInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string markets, string agencies, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByMemberTypeAgencyMarketOriginallyAvailableInhouse>("USP_OR_RptProductionByMemberTypeAgencyMarketOriginallyAvailableInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, marketsParameter, agenciesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByNationalityInhouse> USP_OR_RptProductionByNationalityInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<bool> considerQuinellas, Nullable<byte> filterSaveCourtesyTours, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var filterSaveCourtesyToursParameter = filterSaveCourtesyTours.HasValue ?
                new ObjectParameter("FilterSaveCourtesyTours", filterSaveCourtesyTours) :
                new ObjectParameter("FilterSaveCourtesyTours", typeof(byte));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByNationalityInhouse>("USP_OR_RptProductionByNationalityInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, considerQuinellasParameter, filterSaveCourtesyToursParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByNationalityMarketOriginallyAvailableInhouse> USP_OR_RptProductionByNationalityMarketOriginallyAvailableInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<bool> considerQuinellas, Nullable<byte> filterSaveCourtesyTours, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var filterSaveCourtesyToursParameter = filterSaveCourtesyTours.HasValue ?
                new ObjectParameter("FilterSaveCourtesyTours", filterSaveCourtesyTours) :
                new ObjectParameter("FilterSaveCourtesyTours", typeof(byte));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByNationalityMarketOriginallyAvailableInhouse>("USP_OR_RptProductionByNationalityMarketOriginallyAvailableInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, considerQuinellasParameter, filterSaveCourtesyToursParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByPRGroupInhouse> USP_OR_RptProductionByPRGroupInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByPRGroupInhouse>("USP_OR_RptProductionByPRGroupInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByPRInhouse> USP_OR_RptProductionByPRInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival, Nullable<bool> basedOnPRLocation)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            var basedOnPRLocationParameter = basedOnPRLocation.HasValue ?
                new ObjectParameter("BasedOnPRLocation", basedOnPRLocation) :
                new ObjectParameter("BasedOnPRLocation", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByPRInhouse>("USP_OR_RptProductionByPRInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter, basedOnPRLocationParameter);
        }
    
        public virtual ObjectResult<RptProductionByPRSalesRoomInhouse> USP_OR_RptProductionByPRSalesRoomInhouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByPRSalesRoomInhouse>("USP_OR_RptProductionByPRSalesRoomInhouse", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptRepsPayment> USP_OR_RptRepsPayment(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptRepsPayment>("USP_OR_RptRepsPayment", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptRepsPaymentSummary> USP_OR_RptRepsPaymentSummary(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptRepsPaymentSummary>("USP_OR_RptRepsPaymentSummary", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual int USP_OR_CancelGiftsReceipt(Nullable<int> receipt, Nullable<System.DateTime> date)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CancelGiftsReceipt", receiptParameter, dateParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptDetailCancel> USP_OR_GetGiftsReceiptDetailCancel(Nullable<int> receipt, Nullable<byte> externalProducts, Nullable<bool> package)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var externalProductsParameter = externalProducts.HasValue ?
                new ObjectParameter("ExternalProducts", externalProducts) :
                new ObjectParameter("ExternalProducts", typeof(byte));
    
            var packageParameter = package.HasValue ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptDetailCancel>("USP_OR_GetGiftsReceiptDetailCancel", receiptParameter, externalProductsParameter, packageParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptDetailPromotionsOpera> USP_OR_GetGiftsReceiptDetailPromotionsOpera(Nullable<int> receipt)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptDetailPromotionsOpera>("USP_OR_GetGiftsReceiptDetailPromotionsOpera", receiptParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptDetailPromotionsSistur> USP_OR_GetGiftsReceiptDetailPromotionsPVP(Nullable<int> receipt)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptDetailPromotionsSistur>("USP_OR_GetGiftsReceiptDetailPromotionsPVP", receiptParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptDetailRoomChargesOpera> USP_OR_GetGiftsReceiptDetailRoomChargesOpera(Nullable<int> receipt)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptDetailRoomChargesOpera>("USP_OR_GetGiftsReceiptDetailRoomChargesOpera", receiptParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptPackage> USP_OR_GetGiftsReceiptPackage(Nullable<int> receipt, string package)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var packageParameter = package != null ?
                new ObjectParameter("Package", package) :
                new ObjectParameter("Package", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptPackage>("USP_OR_GetGiftsReceiptPackage", receiptParameter, packageParameter);
        }
    
        public virtual int USP_OR_SaveGiftsReceiptLog(Nullable<int> receipt, Nullable<short> hoursDif, string changedBy)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var hoursDifParameter = hoursDif.HasValue ?
                new ObjectParameter("HoursDif", hoursDif) :
                new ObjectParameter("HoursDif", typeof(short));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveGiftsReceiptLog", receiptParameter, hoursDifParameter, changedByParameter);
        }
    
        public virtual int USP_OR_SaveGuestPromotion(Nullable<int> receipt, string gift, string promotionOpera, Nullable<int> guest, Nullable<int> quantity, Nullable<System.DateTime> date)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            var promotionOperaParameter = promotionOpera != null ?
                new ObjectParameter("PromotionOpera", promotionOpera) :
                new ObjectParameter("PromotionOpera", typeof(string));
    
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveGuestPromotion", receiptParameter, giftParameter, promotionOperaParameter, guestParameter, quantityParameter, dateParameter);
        }
    
        public virtual int USP_OR_UpdateGiftReceiptsReimpresionMotive(Nullable<int> receipt, Nullable<byte> reimpresionMotive)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var reimpresionMotiveParameter = reimpresionMotive.HasValue ?
                new ObjectParameter("ReimpresionMotive", reimpresionMotive) :
                new ObjectParameter("ReimpresionMotive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGiftReceiptsReimpresionMotive", receiptParameter, reimpresionMotiveParameter);
        }
    
        public virtual int USP_OR_UpdateGiftReceiptsReimpresionNumber(Nullable<int> receipt)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGiftReceiptsReimpresionNumber", receiptParameter);
        }
    
        public virtual int USP_OR_UpdateGiftsReceiptDetailPromotionOpera(Nullable<int> receipt, string gift, string promotionOpera)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            var promotionOperaParameter = promotionOpera != null ?
                new ObjectParameter("PromotionOpera", promotionOpera) :
                new ObjectParameter("PromotionOpera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGiftsReceiptDetailPromotionOpera", receiptParameter, giftParameter, promotionOperaParameter);
        }
    
        public virtual int USP_OR_UpdateGiftsReceiptDetailPromotionPVP(Nullable<int> receipt, string gift, string promotionPVP)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            var promotionPVPParameter = promotionPVP != null ?
                new ObjectParameter("PromotionPVP", promotionPVP) :
                new ObjectParameter("PromotionPVP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGiftsReceiptDetailPromotionPVP", receiptParameter, giftParameter, promotionPVPParameter);
        }
    
        public virtual int USP_OR_UpdateGiftsReceiptDetailRoomChargeOpera(Nullable<int> receipt, string gift, string transactionTypeOpera)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            var transactionTypeOperaParameter = transactionTypeOpera != null ?
                new ObjectParameter("TransactionTypeOpera", transactionTypeOpera) :
                new ObjectParameter("TransactionTypeOpera", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGiftsReceiptDetailRoomChargeOpera", receiptParameter, giftParameter, transactionTypeOperaParameter);
        }
    
        public virtual int USP_OR_UpdateRoomChargesConsecutive(string hotel, string folio)
        {
            var hotelParameter = hotel != null ?
                new ObjectParameter("Hotel", hotel) :
                new ObjectParameter("Hotel", typeof(string));
    
            var folioParameter = folio != null ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateRoomChargesConsecutive", hotelParameter, folioParameter);
        }
    
        public virtual ObjectResult<ValidationData> USP_OR_ValidateGiftsReceipt(string changedBy, string password, Nullable<int> guest, string location, string salesRoom, string giftsHost, string personnel)
        {
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var giftsHostParameter = giftsHost != null ?
                new ObjectParameter("GiftsHost", giftsHost) :
                new ObjectParameter("GiftsHost", typeof(string));
    
            var personnelParameter = personnel != null ?
                new ObjectParameter("Personnel", personnel) :
                new ObjectParameter("Personnel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationData>("USP_OR_ValidateGiftsReceipt", changedByParameter, passwordParameter, guestParameter, locationParameter, salesRoomParameter, giftsHostParameter, personnelParameter);
        }
    
        public virtual ObjectResult<ExchangeRateShort> USP_OR_GetExchangeRatesByDate(Nullable<System.DateTime> date, string currency)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExchangeRateShort>("USP_OR_GetExchangeRatesByDate", dateParameter, currencyParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgencyMarketHotelOuthouse> USP_OR_RptProductionByAgencyMarketHotelOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgencyMarketHotelOuthouse>("USP_OR_RptProductionByAgencyMarketHotelOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgencyOuthouse> USP_OR_RptProductionByAgencyOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit, Nullable<bool> salesByMembershipType)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            var salesByMembershipTypeParameter = salesByMembershipType.HasValue ?
                new ObjectParameter("SalesByMembershipType", salesByMembershipType) :
                new ObjectParameter("SalesByMembershipType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgencyOuthouse>("USP_OR_RptProductionByAgencyOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter, salesByMembershipTypeParameter);
        }
    
        public virtual ObjectResult<RptProductionByCoupleTypeOuthouse> USP_OR_RptProductionByCoupleTypeOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByCoupleTypeOuthouse>("USP_OR_RptProductionByCoupleTypeOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByCoupleTypeSalesRoomOuthouse> USP_OR_RptProductionByCoupleTypeSalesRoomOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByCoupleTypeSalesRoomOuthouse>("USP_OR_RptProductionByCoupleTypeSalesRoomOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByPROuthouse> USP_OR_RptProductionByPROutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit, Nullable<bool> basedOnBooking)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            var basedOnBookingParameter = basedOnBooking.HasValue ?
                new ObjectParameter("BasedOnBooking", basedOnBooking) :
                new ObjectParameter("BasedOnBooking", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByPROuthouse>("USP_OR_RptProductionByPROutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter, basedOnBookingParameter);
        }
    
        public virtual ObjectResult<RptProductionBySalesRoom> USP_OR_RptProductionBySalesRoom(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionBySalesRoom>("USP_OR_RptProductionBySalesRoom", dateFromParameter, dateToParameter, salesRoomsParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionBySalesRoomMarket> USP_OR_RptProductionBySalesRoomMarket(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionBySalesRoomMarket>("USP_OR_RptProductionBySalesRoomMarket", dateFromParameter, dateToParameter, salesRoomsParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionBySalesRoomProgramMarketSubmarket> USP_OR_RptProductionBySalesRoomProgramMarketSubmarket(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionBySalesRoomProgramMarketSubmarket>("USP_OR_RptProductionBySalesRoomProgramMarketSubmarket", dateFromParameter, dateToParameter, salesRoomsParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByShowProgram> USP_OR_RptProductionByShowProgram(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByShowProgram>("USP_OR_RptProductionByShowProgram", dateFromParameter, dateToParameter, salesRoomsParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByShowProgramProgram> USP_OR_RptProductionByShowProgramProgram(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByShowProgramProgram>("USP_OR_RptProductionByShowProgramProgram", dateFromParameter, dateToParameter, salesRoomsParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptCxCPayments> USP_OR_RptCxCPayments(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCxCPayments>("USP_OR_RptCxCPayments", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptGiftsByCategory> USP_OR_RptGiftsByCategory(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsByCategory>("USP_OR_RptGiftsByCategory", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptGiftsByCategoryProgram> USP_OR_RptGiftsByCategoryProgram(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsByCategoryProgram>("USP_OR_RptGiftsByCategoryProgram", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptTaxisIn> USP_OR_RptTaxisIn(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTaxisIn>("USP_OR_RptTaxisIn", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptTaxisOut> USP_OR_RptTaxisOut(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptTaxisOut>("USP_OR_RptTaxisOut", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptGiftsCertificates> USP_OR_RptGiftsCertificates(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string categories, string gifts)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var categoriesParameter = categories != null ?
                new ObjectParameter("Categories", categories) :
                new ObjectParameter("Categories", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsCertificates>("USP_OR_RptGiftsCertificates", dateFromParameter, dateToParameter, salesRoomsParameter, categoriesParameter, giftsParameter);
        }
    
        public virtual ObjectResult<RptGiftsReceiptsPayments> USP_OR_RptGiftsReceiptsPayments(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsReceiptsPayments>("USP_OR_RptGiftsReceiptsPayments", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual int USP_OR_TransferDeleteTransfer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_TransferDeleteTransfer");
        }
    
        public virtual ObjectResult<Transfer> USP_OR_TransferGetTransfer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transfer>("USP_OR_TransferGetTransfer");
        }
    
        public virtual ObjectResult<Transfer> USP_OR_TransferGetTransfer(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Transfer>("USP_OR_TransferGetTransfer", mergeOption);
        }
    
        public virtual ObjectResult<NoticeShort> USP_OR_GetNotices(string leadSource, Nullable<System.DateTime> date)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NoticeShort>("USP_OR_GetNotices", leadSourceParameter, dateParameter);
        }
    
        public virtual ObjectResult<RptArrivals> USP_OR_RptArrivals(Nullable<System.DateTime> date, string leadSource, string markets, Nullable<int> available, Nullable<int> contacted, Nullable<int> invited, Nullable<int> onGroup)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var availableParameter = available.HasValue ?
                new ObjectParameter("Available", available) :
                new ObjectParameter("Available", typeof(int));
    
            var contactedParameter = contacted.HasValue ?
                new ObjectParameter("Contacted", contacted) :
                new ObjectParameter("Contacted", typeof(int));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(int));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptArrivals>("USP_OR_RptArrivals", dateParameter, leadSourceParameter, marketsParameter, availableParameter, contactedParameter, invitedParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<RptAvailables> USP_OR_RptAvailables(Nullable<System.DateTime> currentDate, string leadSource, string markets, Nullable<int> contacted, Nullable<int> invited, Nullable<int> onGroup)
        {
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var contactedParameter = contacted.HasValue ?
                new ObjectParameter("Contacted", contacted) :
                new ObjectParameter("Contacted", typeof(int));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(int));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAvailables>("USP_OR_RptAvailables", currentDateParameter, leadSourceParameter, marketsParameter, contactedParameter, invitedParameter, onGroupParameter);
        }
    
        public virtual ObjectResult<RptPremanifest> USP_OR_RptPremanifest(Nullable<System.DateTime> date, string placeID, string salesRoom, string markets, Nullable<int> onGroup, Nullable<bool> multiLeadSource, Nullable<bool> regen, Nullable<System.DateTime> currentDate)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var placeIDParameter = placeID != null ?
                new ObjectParameter("PlaceID", placeID) :
                new ObjectParameter("PlaceID", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var onGroupParameter = onGroup.HasValue ?
                new ObjectParameter("OnGroup", onGroup) :
                new ObjectParameter("OnGroup", typeof(int));
    
            var multiLeadSourceParameter = multiLeadSource.HasValue ?
                new ObjectParameter("MultiLeadSource", multiLeadSource) :
                new ObjectParameter("MultiLeadSource", typeof(bool));
    
            var regenParameter = regen.HasValue ?
                new ObjectParameter("Regen", regen) :
                new ObjectParameter("Regen", typeof(bool));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPremanifest>("USP_OR_RptPremanifest", dateParameter, placeIDParameter, salesRoomParameter, marketsParameter, onGroupParameter, multiLeadSourceParameter, regenParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<RptPremanifestOuthouse> USP_OR_RptPremanifestOutside(Nullable<System.DateTime> date, string leadSource)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPremanifestOuthouse>("USP_OR_RptPremanifestOutside", dateParameter, leadSourceParameter);
        }
    
        public virtual ObjectResult<RptPremanifestWithGifts> USP_OR_RptPremanifestWithGifts(Nullable<System.DateTime> date, string placeID, string salesRoom, Nullable<bool> multiLeadSource, Nullable<bool> regen, Nullable<System.DateTime> currentDate)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var placeIDParameter = placeID != null ?
                new ObjectParameter("PlaceID", placeID) :
                new ObjectParameter("PlaceID", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var multiLeadSourceParameter = multiLeadSource.HasValue ?
                new ObjectParameter("MultiLeadSource", multiLeadSource) :
                new ObjectParameter("MultiLeadSource", typeof(bool));
    
            var regenParameter = regen.HasValue ?
                new ObjectParameter("Regen", regen) :
                new ObjectParameter("Regen", typeof(bool));
    
            var currentDateParameter = currentDate.HasValue ?
                new ObjectParameter("CurrentDate", currentDate) :
                new ObjectParameter("CurrentDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPremanifestWithGifts>("USP_OR_RptPremanifestWithGifts", dateParameter, placeIDParameter, salesRoomParameter, multiLeadSourceParameter, regenParameter, currentDateParameter);
        }
    
        public virtual ObjectResult<RptSelfGen> sprptSelfGen(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptSelfGen>("sprptSelfGen", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptDepositRefund> USP_OR_RptDepositRefund(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositRefund>("USP_OR_RptDepositRefund", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptDepositsBurnedGuests> USP_OR_RptDepositsBurnedGuests(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsBurnedGuests>("USP_OR_RptDepositsBurnedGuests", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptDepositsByPR> USP_OR_RptDepositsByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsByPR>("USP_OR_RptDepositsByPR", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptGiftsSale> USP_OR_RptGiftsSale(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string categories, string gifts, Nullable<byte> sale)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var categoriesParameter = categories != null ?
                new ObjectParameter("Categories", categories) :
                new ObjectParameter("Categories", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsSale>("USP_OR_RptGiftsSale", dateFromParameter, dateToParameter, salesRoomsParameter, categoriesParameter, giftsParameter, saleParameter);
        }
    
        public virtual ObjectResult<RptGiftsUsedBySistur> USP_OR_RptGiftsUsedBySistur(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string programs, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsUsedBySistur>("USP_OR_RptGiftsUsedBySistur", dateFromParameter, dateToParameter, salesRoomsParameter, programsParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptInOutByPR> USP_OR_RptInOutByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptInOutByPR>("USP_OR_RptInOutByPR", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptPersonnelAccess> USP_OR_RptPersonnelAccess(string leadSources)
        {
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptPersonnelAccess>("USP_OR_RptPersonnelAccess", leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptDepositsNoShow> USP_OR_RptDepositsNoShow(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDepositsNoShow>("USP_OR_RptDepositsNoShow", dateFromParameter, dateToParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgencySalesRoomOuthouse> USP_OR_RptProductionByAgencySalesRoomOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit, Nullable<bool> salesByMembershipType)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            var salesByMembershipTypeParameter = salesByMembershipType.HasValue ?
                new ObjectParameter("SalesByMembershipType", salesByMembershipType) :
                new ObjectParameter("SalesByMembershipType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgencySalesRoomOuthouse>("USP_OR_RptProductionByAgencySalesRoomOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter, salesByMembershipTypeParameter);
        }
    
        public virtual ObjectResult<RptProductionByGiftInvitation> USP_OR_RptProductionByGiftInvitation(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, string gifts, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByGiftInvitation>("USP_OR_RptProductionByGiftInvitation", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, giftsParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByGiftInvitationSalesRoom> USP_OR_RptProductionByGiftInvitationSalesRoom(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, string gifts, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByGiftInvitationSalesRoom>("USP_OR_RptProductionByGiftInvitationSalesRoom", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, giftsParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByGuestStatusOuthouse> USP_OR_RptProductionByGuestStatusOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByGuestStatusOuthouse>("USP_OR_RptProductionByGuestStatusOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByNationalityOuthouse> USP_OR_RptProductionByNationalityOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit, Nullable<byte> filterSaveCourtesyTours)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            var filterSaveCourtesyToursParameter = filterSaveCourtesyTours.HasValue ?
                new ObjectParameter("FilterSaveCourtesyTours", filterSaveCourtesyTours) :
                new ObjectParameter("FilterSaveCourtesyTours", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByNationalityOuthouse>("USP_OR_RptProductionByNationalityOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter, filterSaveCourtesyToursParameter);
        }
    
        public virtual ObjectResult<RptProductionByNationalitySalesRoomOuthouse> USP_OR_RptProductionByNationalitySalesRoomOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit, Nullable<byte> filterSaveCourtesyTours)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            var filterSaveCourtesyToursParameter = filterSaveCourtesyTours.HasValue ?
                new ObjectParameter("FilterSaveCourtesyTours", filterSaveCourtesyTours) :
                new ObjectParameter("FilterSaveCourtesyTours", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByNationalitySalesRoomOuthouse>("USP_OR_RptProductionByNationalitySalesRoomOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter, filterSaveCourtesyToursParameter);
        }
    
        public virtual ObjectResult<GuestStatusValidateData> USP_OR_GetGuestStatusValidateInfo(Nullable<int> guest, Nullable<int> giftReceipt)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var giftReceiptParameter = giftReceipt.HasValue ?
                new ObjectParameter("GiftReceipt", giftReceipt) :
                new ObjectParameter("GiftReceipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestStatusValidateData>("USP_OR_GetGuestStatusValidateInfo", guestParameter, giftReceiptParameter);
        }
    
        public virtual ObjectResult<GraphProduction_Weeks> USP_OR_GraphProduction(Nullable<System.DateTime> dateFromWeek, string leadSources, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromWeekParameter = dateFromWeek.HasValue ?
                new ObjectParameter("DateFromWeek", dateFromWeek) :
                new ObjectParameter("DateFromWeek", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GraphProduction_Weeks>("USP_OR_GraphProduction", dateFromWeekParameter, leadSourcesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<GraphTotals> USP_OR_GraphUnavailableArrivals(Nullable<System.DateTime> dateFromWeek, string leadSources)
        {
            var dateFromWeekParameter = dateFromWeek.HasValue ?
                new ObjectParameter("DateFromWeek", dateFromWeek) :
                new ObjectParameter("DateFromWeek", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GraphTotals>("USP_OR_GraphUnavailableArrivals", dateFromWeekParameter, leadSourcesParameter);
        }
    
        public virtual ObjectResult<RptProductionByAgencyMonthly> USP_OR_RptProductionByAgencyMonthly(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string agencies, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByAgencyMonthly>("USP_OR_RptProductionByAgencyMonthly", dateFromParameter, dateToParameter, agenciesParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptShowFactorByBookingDate> USP_OR_RptShowFactorByBookingDate(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptShowFactorByBookingDate>("USP_OR_RptShowFactorByBookingDate", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter);
        }
    
        public virtual ObjectResult<RptUnavailableMotivesByAgency> USP_OR_RptUnavailableMotivesByAgency(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string markets, string agencies)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var marketsParameter = markets != null ?
                new ObjectParameter("Markets", markets) :
                new ObjectParameter("Markets", typeof(string));
    
            var agenciesParameter = agencies != null ?
                new ObjectParameter("Agencies", agencies) :
                new ObjectParameter("Agencies", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptUnavailableMotivesByAgency>("USP_OR_RptUnavailableMotivesByAgency", dateFromParameter, dateToParameter, leadSourcesParameter, marketsParameter, agenciesParameter);
        }
    
        public virtual ObjectResult<RptWarehouseMovements> sprptWhsMovs(Nullable<System.DateTime> startD, Nullable<System.DateTime> endD, string wH0)
        {
            var startDParameter = startD.HasValue ?
                new ObjectParameter("StartD", startD) :
                new ObjectParameter("StartD", typeof(System.DateTime));
    
            var endDParameter = endD.HasValue ?
                new ObjectParameter("endD", endD) :
                new ObjectParameter("endD", typeof(System.DateTime));
    
            var wH0Parameter = wH0 != null ?
                new ObjectParameter("WH0", wH0) :
                new ObjectParameter("WH0", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptWarehouseMovements>("sprptWhsMovs", startDParameter, endDParameter, wH0Parameter);
        }
    
        public virtual ObjectResult<RptAgencies> USP_OR_RptAgencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptAgencies>("USP_OR_RptAgencies");
        }
    
        public virtual ObjectResult<RptProductionByLeadSourceMarketMonthly> USP_OR_RptProductionByLeadSourceMarketMonthly(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string program, Nullable<bool> considerQuinellas, Nullable<int> external, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var externalParameter = external.HasValue ?
                new ObjectParameter("External", external) :
                new ObjectParameter("External", typeof(int));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByLeadSourceMarketMonthly>("USP_OR_RptProductionByLeadSourceMarketMonthly", dateFromParameter, dateToParameter, leadSourcesParameter, programParameter, considerQuinellasParameter, externalParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionReferral> USP_OR_RptProductionReferral(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionReferral>("USP_OR_RptProductionReferral", dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<RptSalesByProgramLeadSourceMarket> USP_OR_RptSalesByProgramLeadSourceMarket(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptSalesByProgramLeadSourceMarket>("USP_OR_RptSalesByProgramLeadSourceMarket", dateFromParameter, dateToParameter);
        }
    
        public virtual int USP_OR_AddAccessAdministrator(string placeType)
        {
            var placeTypeParameter = placeType != null ?
                new ObjectParameter("PlaceType", placeType) :
                new ObjectParameter("PlaceType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_AddAccessAdministrator", placeTypeParameter);
        }
    
        public virtual ObjectResult<RptFoliosCXC> USP_OR_RptFoliosCXC(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<int> folioFrom, Nullable<int> folioTo, Nullable<int> folioALL, string leadSources, string pRs)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var folioFromParameter = folioFrom.HasValue ?
                new ObjectParameter("FolioFrom", folioFrom) :
                new ObjectParameter("FolioFrom", typeof(int));
    
            var folioToParameter = folioTo.HasValue ?
                new ObjectParameter("FolioTo", folioTo) :
                new ObjectParameter("FolioTo", typeof(int));
    
            var folioALLParameter = folioALL.HasValue ?
                new ObjectParameter("FolioALL", folioALL) :
                new ObjectParameter("FolioALL", typeof(int));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFoliosCXC>("USP_OR_RptFoliosCXC", dateFromParameter, dateToParameter, folioFromParameter, folioToParameter, folioALLParameter, leadSourcesParameter, pRsParameter);
        }
    
        public virtual ObjectResult<RptFoliosCxCByPR> USP_OR_RptFoliosCxCByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, Nullable<bool> allFolios, Nullable<int> folioFrom, Nullable<int> folioTo, string leadSource, string promotors)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var allFoliosParameter = allFolios.HasValue ?
                new ObjectParameter("allFolios", allFolios) :
                new ObjectParameter("allFolios", typeof(bool));
    
            var folioFromParameter = folioFrom.HasValue ?
                new ObjectParameter("FolioFrom", folioFrom) :
                new ObjectParameter("FolioFrom", typeof(int));
    
            var folioToParameter = folioTo.HasValue ?
                new ObjectParameter("FolioTo", folioTo) :
                new ObjectParameter("FolioTo", typeof(int));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var promotorsParameter = promotors != null ?
                new ObjectParameter("Promotors", promotors) :
                new ObjectParameter("Promotors", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFoliosCxCByPR>("USP_OR_RptFoliosCxCByPR", dateFromParameter, dateToParameter, allFoliosParameter, folioFromParameter, folioToParameter, leadSourceParameter, promotorsParameter);
        }
    
        public virtual ObjectResult<RptFoliosInvitationByDateFolio> USP_OR_RptFoliosInvitationByDateFolio(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string serie, Nullable<int> folioFrom, Nullable<int> folioTo, string leadSources, string pRs)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var folioFromParameter = folioFrom.HasValue ?
                new ObjectParameter("FolioFrom", folioFrom) :
                new ObjectParameter("FolioFrom", typeof(int));
    
            var folioToParameter = folioTo.HasValue ?
                new ObjectParameter("FolioTo", folioTo) :
                new ObjectParameter("FolioTo", typeof(int));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFoliosInvitationByDateFolio>("USP_OR_RptFoliosInvitationByDateFolio", dateFromParameter, dateToParameter, serieParameter, folioFromParameter, folioToParameter, leadSourcesParameter, pRsParameter);
        }
    
        public virtual ObjectResult<RptFoliosInvitationsOuthouseByPR> USP_OR_RptFoliosInvitationsOuthouseByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string serie, Nullable<int> folioFrom, Nullable<int> folioTo, string leadSource, string promotors)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var folioFromParameter = folioFrom.HasValue ?
                new ObjectParameter("FolioFrom", folioFrom) :
                new ObjectParameter("FolioFrom", typeof(int));
    
            var folioToParameter = folioTo.HasValue ?
                new ObjectParameter("FolioTo", folioTo) :
                new ObjectParameter("FolioTo", typeof(int));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var promotorsParameter = promotors != null ?
                new ObjectParameter("Promotors", promotors) :
                new ObjectParameter("Promotors", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFoliosInvitationsOuthouseByPR>("USP_OR_RptFoliosInvitationsOuthouseByPR", dateFromParameter, dateToParameter, serieParameter, folioFromParameter, folioToParameter, leadSourceParameter, promotorsParameter);
        }
    
        public virtual ObjectResult<RptProductionByPRContactOuthouse> USP_OR_RptProductionByPRContactOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByPRContactOuthouse>("USP_OR_RptProductionByPRContactOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByPRSalesRoomOuthouse> USP_OR_RptProductionByPRSalesRoomOutside(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit, Nullable<bool> basedOnBooking)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            var basedOnBookingParameter = basedOnBooking.HasValue ?
                new ObjectParameter("BasedOnBooking", basedOnBooking) :
                new ObjectParameter("BasedOnBooking", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByPRSalesRoomOuthouse>("USP_OR_RptProductionByPRSalesRoomOutside", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter, basedOnBookingParameter);
        }
    
        public virtual ObjectResult<UserLogin> USP_IM_Login(Nullable<byte> loginType, string user, string password, string place)
        {
            var loginTypeParameter = loginType.HasValue ?
                new ObjectParameter("LoginType", loginType) :
                new ObjectParameter("LoginType", typeof(byte));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var placeParameter = place != null ?
                new ObjectParameter("Place", place) :
                new ObjectParameter("Place", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserLogin>("USP_IM_Login", loginTypeParameter, userParameter, passwordParameter, placeParameter);
        }
    
        public virtual int USP_OR_DeleteGuest(Nullable<int> guest)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_DeleteGuest", guestParameter);
        }
    
        public virtual ObjectResult<RptProductionByMember> USP_OR_RptProductionByMember(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, string application, Nullable<decimal> company, Nullable<int> club, Nullable<bool> onlyWholesalers, Nullable<bool> considerQuinellas, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var companyParameter = company.HasValue ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(decimal));
    
            var clubParameter = club.HasValue ?
                new ObjectParameter("Club", club) :
                new ObjectParameter("Club", typeof(int));
    
            var onlyWholesalersParameter = onlyWholesalers.HasValue ?
                new ObjectParameter("OnlyWholesalers", onlyWholesalers) :
                new ObjectParameter("OnlyWholesalers", typeof(bool));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByMember>("USP_OR_RptProductionByMember", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, applicationParameter, companyParameter, clubParameter, onlyWholesalersParameter, considerQuinellasParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptLoginLog> USP_IM_RptLoginLog(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string location, string pCName, string personnel)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var pCNameParameter = pCName != null ?
                new ObjectParameter("PCName", pCName) :
                new ObjectParameter("PCName", typeof(string));
    
            var personnelParameter = personnel != null ?
                new ObjectParameter("Personnel", personnel) :
                new ObjectParameter("Personnel", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLoginLog>("USP_IM_RptLoginLog", dateFromParameter, dateToParameter, locationParameter, pCNameParameter, personnelParameter);
        }
    
        public virtual ObjectResult<RptGiftsManifest> USP_OR_RptGiftsManifest(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string categories, string gifts, Nullable<byte> status)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var categoriesParameter = categories != null ?
                new ObjectParameter("Categories", categories) :
                new ObjectParameter("Categories", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsManifest>("USP_OR_RptGiftsManifest", dateFromParameter, dateToParameter, salesRoomsParameter, categoriesParameter, giftsParameter, statusParameter);
        }
    
        public virtual ObjectResult<RptGiftsReceipts> USP_OR_RptGiftsReceipts(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string categories, string gifts, Nullable<byte> status, Nullable<byte> giftReceiptType, Nullable<int> guestId)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var categoriesParameter = categories != null ?
                new ObjectParameter("Categories", categories) :
                new ObjectParameter("Categories", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var giftReceiptTypeParameter = giftReceiptType.HasValue ?
                new ObjectParameter("GiftReceiptType", giftReceiptType) :
                new ObjectParameter("GiftReceiptType", typeof(byte));
    
            var guestIdParameter = guestId.HasValue ?
                new ObjectParameter("GuestId", guestId) :
                new ObjectParameter("GuestId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsReceipts>("USP_OR_RptGiftsReceipts", dateFromParameter, dateToParameter, salesRoomsParameter, categoriesParameter, giftsParameter, statusParameter, giftReceiptTypeParameter, guestIdParameter);
        }
    
        public virtual ObjectResult<RptDailySalesDetail> USP_OR_RptDailySalesDetail(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDailySalesDetail>("USP_OR_RptDailySalesDetail", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptDailySalesHeader> USP_OR_RptDailySalesHeader(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptDailySalesHeader>("USP_OR_RptDailySalesHeader", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByLocation> USP_OR_RptStatsByLocation(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByLocation>("USP_OR_RptStatsByLocation", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByLocationMonthly> USP_OR_RptStatsByLocationMonthly(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByLocationMonthly>("USP_OR_RptStatsByLocationMonthly", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptStatisticsBySalesRoomLocation> USP_OR_RptStatsBySalesRoomLocation(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsBySalesRoomLocation>("USP_OR_RptStatsBySalesRoomLocation", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptSalesByLocationMonthly> USP_OR_RptSalesByLocationMonthly(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptSalesByLocationMonthly>("USP_OR_RptSalesByLocationMonthly", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<ValidationFolioData> USP_OR_ValidateFolioCxCPR(string pR, Nullable<int> from, Nullable<int> to, Nullable<bool> isCancel)
        {
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var isCancelParameter = isCancel.HasValue ?
                new ObjectParameter("isCancel", isCancel) :
                new ObjectParameter("isCancel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationFolioData>("USP_OR_ValidateFolioCxCPR", pRParameter, fromParameter, toParameter, isCancelParameter);
        }
    
        public virtual ObjectResult<ValidationFolioData> USP_OR_ValidateFolioInvOutPR(string pR, string serie, Nullable<int> from, Nullable<int> to, Nullable<bool> isCancel)
        {
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var serieParameter = serie != null ?
                new ObjectParameter("Serie", serie) :
                new ObjectParameter("Serie", typeof(string));
    
            var fromParameter = from.HasValue ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(int));
    
            var toParameter = to.HasValue ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(int));
    
            var isCancelParameter = isCancel.HasValue ?
                new ObjectParameter("isCancel", isCancel) :
                new ObjectParameter("isCancel", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationFolioData>("USP_OR_ValidateFolioInvOutPR", pRParameter, serieParameter, fromParameter, toParameter, isCancelParameter);
        }
    
        public virtual ObjectResult<GetGiftsReceiptsAdditional> USP_IM_GetGiftsReceiptsAdditional(Nullable<int> guestID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGiftsReceiptsAdditional>("USP_IM_GetGiftsReceiptsAdditional", guestIDParameter);
        }
    
        public virtual ObjectResult<RptConcentrateDailySales> USP_IM_RptConcentrateDailySales(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string listSalesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var listSalesRoomParameter = listSalesRoom != null ?
                new ObjectParameter("ListSalesRoom", listSalesRoom) :
                new ObjectParameter("ListSalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptConcentrateDailySales>("USP_IM_RptConcentrateDailySales", dateFromParameter, dateToParameter, listSalesRoomParameter);
        }
    
        public virtual ObjectResult<RptCloserStatistics> USP_IM_RptCloserStatistics(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCloserStatistics>("USP_IM_RptCloserStatistics", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptLinerStatistics> USP_IM_RptLinerStatistics(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptLinerStatistics>("USP_IM_RptLinerStatistics", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptContactBookShowQuinellas> USP_IM_RptContactBookShowQuinellas(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<int> external, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var externalParameter = external.HasValue ?
                new ObjectParameter("External", external) :
                new ObjectParameter("External", typeof(int));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptContactBookShowQuinellas>("USP_IM_RptContactBookShowQuinellas", dateFromParameter, dateToParameter, leadSourcesParameter, externalParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptProductionByMonth> USP_OR_RptProductionByMonth(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas, string market, Nullable<bool> considerNights, Nullable<int> nightsFrom, Nullable<int> nightsTo, string agency, Nullable<bool> considerOriginallyAvailable, Nullable<int> external, Nullable<bool> basedOnArrival)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            var marketParameter = market != null ?
                new ObjectParameter("Market", market) :
                new ObjectParameter("Market", typeof(string));
    
            var considerNightsParameter = considerNights.HasValue ?
                new ObjectParameter("ConsiderNights", considerNights) :
                new ObjectParameter("ConsiderNights", typeof(bool));
    
            var nightsFromParameter = nightsFrom.HasValue ?
                new ObjectParameter("NightsFrom", nightsFrom) :
                new ObjectParameter("NightsFrom", typeof(int));
    
            var nightsToParameter = nightsTo.HasValue ?
                new ObjectParameter("NightsTo", nightsTo) :
                new ObjectParameter("NightsTo", typeof(int));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var considerOriginallyAvailableParameter = considerOriginallyAvailable.HasValue ?
                new ObjectParameter("ConsiderOriginallyAvailable", considerOriginallyAvailable) :
                new ObjectParameter("ConsiderOriginallyAvailable", typeof(bool));
    
            var externalParameter = external.HasValue ?
                new ObjectParameter("External", external) :
                new ObjectParameter("External", typeof(int));
    
            var basedOnArrivalParameter = basedOnArrival.HasValue ?
                new ObjectParameter("BasedOnArrival", basedOnArrival) :
                new ObjectParameter("BasedOnArrival", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByMonth>("USP_OR_RptProductionByMonth", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter, marketParameter, considerNightsParameter, nightsFromParameter, nightsToParameter, agencyParameter, considerOriginallyAvailableParameter, externalParameter, basedOnArrivalParameter);
        }
    
        public virtual ObjectResult<RptScoreByPR> USP_OR_RptScoreByPR(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, Nullable<bool> considerQuinellas)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var considerQuinellasParameter = considerQuinellas.HasValue ?
                new ObjectParameter("ConsiderQuinellas", considerQuinellas) :
                new ObjectParameter("ConsiderQuinellas", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptScoreByPR>("USP_OR_RptScoreByPR", dateFromParameter, dateToParameter, leadSourcesParameter, considerQuinellasParameter);
        }
    
        public virtual ObjectResult<RptCxCExcel> USP_OR_RptCxCExcel(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptCxCExcel>("USP_OR_RptCxCExcel", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual int USP_OR_DeleteSale(Nullable<int> sale)
        {
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_DeleteSale", saleParameter);
        }
    
        public virtual ObjectResult<SaleShort> USP_OR_GetSales(Nullable<int> guest, Nullable<int> sale, string membership, string name, string leadSource, string salesRoom, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            var membershipParameter = membership != null ?
                new ObjectParameter("Membership", membership) :
                new ObjectParameter("Membership", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleShort>("USP_OR_GetSales", guestParameter, saleParameter, membershipParameter, nameParameter, leadSourceParameter, salesRoomParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual int USP_OR_SaveSaleLog(Nullable<int> sale, Nullable<short> hoursDif, string changedBy)
        {
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            var hoursDifParameter = hoursDif.HasValue ?
                new ObjectParameter("HoursDif", hoursDif) :
                new ObjectParameter("HoursDif", typeof(short));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveSaleLog", saleParameter, hoursDifParameter, changedByParameter);
        }
    
        public virtual int USP_OR_SaveSalesmenChanges(Nullable<int> sale, string authorizedBy, string madeBy, string role, Nullable<byte> position, string oldSalesman, string newSalesman)
        {
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            var authorizedByParameter = authorizedBy != null ?
                new ObjectParameter("AuthorizedBy", authorizedBy) :
                new ObjectParameter("AuthorizedBy", typeof(string));
    
            var madeByParameter = madeBy != null ?
                new ObjectParameter("MadeBy", madeBy) :
                new ObjectParameter("MadeBy", typeof(string));
    
            var roleParameter = role != null ?
                new ObjectParameter("Role", role) :
                new ObjectParameter("Role", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(byte));
    
            var oldSalesmanParameter = oldSalesman != null ?
                new ObjectParameter("OldSalesman", oldSalesman) :
                new ObjectParameter("OldSalesman", typeof(string));
    
            var newSalesmanParameter = newSalesman != null ?
                new ObjectParameter("NewSalesman", newSalesman) :
                new ObjectParameter("NewSalesman", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveSalesmenChanges", saleParameter, authorizedByParameter, madeByParameter, roleParameter, positionParameter, oldSalesmanParameter, newSalesmanParameter);
        }
    
        public virtual int USP_OR_UpdateGuestSale(Nullable<int> guestID, Nullable<bool> sale)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGuestSale", guestIDParameter, saleParameter);
        }
    
        public virtual int USP_OR_UpdateGuestSalesmen(Nullable<int> guestID, Nullable<int> saleID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var saleIDParameter = saleID.HasValue ?
                new ObjectParameter("SaleID", saleID) :
                new ObjectParameter("SaleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGuestSalesmen", guestIDParameter, saleIDParameter);
        }
    
        public virtual int USP_OR_UpdateSaleUpdated(Nullable<int> saleID, Nullable<bool> updated)
        {
            var saleIDParameter = saleID.HasValue ?
                new ObjectParameter("SaleID", saleID) :
                new ObjectParameter("SaleID", typeof(int));
    
            var updatedParameter = updated.HasValue ?
                new ObjectParameter("Updated", updated) :
                new ObjectParameter("Updated", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateSaleUpdated", saleIDParameter, updatedParameter);
        }
    
        public virtual ObjectResult<ValidationData> USP_OR_ValidateSale(string changedBy, string password, Nullable<int> sale, string membershipNumber, Nullable<int> guest, string saleType, string salesRoom, string location, string pR1, string pR2, string pR3, string pRCaptain1, string pRCaptain2, string pRCaptain3, string liner1, string liner2, string linerCaptain, string closer1, string closer2, string closer3, string closerCaptain, string exit1, string exit2, string podium, string vLO)
        {
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            var membershipNumberParameter = membershipNumber != null ?
                new ObjectParameter("MembershipNumber", membershipNumber) :
                new ObjectParameter("MembershipNumber", typeof(string));
    
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var saleTypeParameter = saleType != null ?
                new ObjectParameter("SaleType", saleType) :
                new ObjectParameter("SaleType", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var pR1Parameter = pR1 != null ?
                new ObjectParameter("PR1", pR1) :
                new ObjectParameter("PR1", typeof(string));
    
            var pR2Parameter = pR2 != null ?
                new ObjectParameter("PR2", pR2) :
                new ObjectParameter("PR2", typeof(string));
    
            var pR3Parameter = pR3 != null ?
                new ObjectParameter("PR3", pR3) :
                new ObjectParameter("PR3", typeof(string));
    
            var pRCaptain1Parameter = pRCaptain1 != null ?
                new ObjectParameter("PRCaptain1", pRCaptain1) :
                new ObjectParameter("PRCaptain1", typeof(string));
    
            var pRCaptain2Parameter = pRCaptain2 != null ?
                new ObjectParameter("PRCaptain2", pRCaptain2) :
                new ObjectParameter("PRCaptain2", typeof(string));
    
            var pRCaptain3Parameter = pRCaptain3 != null ?
                new ObjectParameter("PRCaptain3", pRCaptain3) :
                new ObjectParameter("PRCaptain3", typeof(string));
    
            var liner1Parameter = liner1 != null ?
                new ObjectParameter("Liner1", liner1) :
                new ObjectParameter("Liner1", typeof(string));
    
            var liner2Parameter = liner2 != null ?
                new ObjectParameter("Liner2", liner2) :
                new ObjectParameter("Liner2", typeof(string));
    
            var linerCaptainParameter = linerCaptain != null ?
                new ObjectParameter("LinerCaptain", linerCaptain) :
                new ObjectParameter("LinerCaptain", typeof(string));
    
            var closer1Parameter = closer1 != null ?
                new ObjectParameter("Closer1", closer1) :
                new ObjectParameter("Closer1", typeof(string));
    
            var closer2Parameter = closer2 != null ?
                new ObjectParameter("Closer2", closer2) :
                new ObjectParameter("Closer2", typeof(string));
    
            var closer3Parameter = closer3 != null ?
                new ObjectParameter("Closer3", closer3) :
                new ObjectParameter("Closer3", typeof(string));
    
            var closerCaptainParameter = closerCaptain != null ?
                new ObjectParameter("CloserCaptain", closerCaptain) :
                new ObjectParameter("CloserCaptain", typeof(string));
    
            var exit1Parameter = exit1 != null ?
                new ObjectParameter("Exit1", exit1) :
                new ObjectParameter("Exit1", typeof(string));
    
            var exit2Parameter = exit2 != null ?
                new ObjectParameter("Exit2", exit2) :
                new ObjectParameter("Exit2", typeof(string));
    
            var podiumParameter = podium != null ?
                new ObjectParameter("Podium", podium) :
                new ObjectParameter("Podium", typeof(string));
    
            var vLOParameter = vLO != null ?
                new ObjectParameter("VLO", vLO) :
                new ObjectParameter("VLO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationData>("USP_OR_ValidateSale", changedByParameter, passwordParameter, saleParameter, membershipNumberParameter, guestParameter, saleTypeParameter, salesRoomParameter, locationParameter, pR1Parameter, pR2Parameter, pR3Parameter, pRCaptain1Parameter, pRCaptain2Parameter, pRCaptain3Parameter, liner1Parameter, liner2Parameter, linerCaptainParameter, closer1Parameter, closer2Parameter, closer3Parameter, closerCaptainParameter, exit1Parameter, exit2Parameter, podiumParameter, vLOParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> USP_OR_CalculateTotalsGiftsInvitation(Nullable<int> guestID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("USP_OR_CalculateTotalsGiftsInvitation", guestIDParameter);
        }
    
        public virtual int USP_OR_UpdateCharge(Nullable<int> guestID, Nullable<decimal> charge, Nullable<decimal> adjustment)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var chargeParameter = charge.HasValue ?
                new ObjectParameter("Charge", charge) :
                new ObjectParameter("Charge", typeof(decimal));
    
            var adjustmentParameter = adjustment.HasValue ?
                new ObjectParameter("Adjustment", adjustment) :
                new ObjectParameter("Adjustment", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateCharge", guestIDParameter, chargeParameter, adjustmentParameter);
        }
    
        public virtual int USP_OR_UpdateGiftsReceiptDetailPromotionPVPCancel(Nullable<int> receipt, string gift)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGiftsReceiptDetailPromotionPVPCancel", receiptParameter, giftParameter);
        }
    
        public virtual ObjectResult<RptProductionByFlightSalesRoom> USP_IM_RptProductionByFlightSalesRoom(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByFlightSalesRoom>("USP_IM_RptProductionByFlightSalesRoom", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByHotel> USP_IM_RptProductionByHotel(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByHotel>("USP_IM_RptProductionByHotel", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByHotelGroup> USP_IM_RptProductionByHotelGroup(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByHotelGroup>("USP_IM_RptProductionByHotelGroup", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByHotelGroupSalesRoom> USP_IM_RptProductionByHotelGroupSalesRoom(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByHotelGroupSalesRoom>("USP_IM_RptProductionByHotelGroupSalesRoom", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByHotelSalesRoom> USP_IM_RptProductionByHotelSalesRoom(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByHotelSalesRoom>("USP_IM_RptProductionByHotelSalesRoom", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByWave> USP_IM_RptProductionByWave(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByWave>("USP_IM_RptProductionByWave", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptProductionByWaveSalesRoom> USP_IM_RptProductionByWaveSalesRoom(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSources, string pRs, string program, Nullable<byte> filterDeposit)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourcesParameter = leadSources != null ?
                new ObjectParameter("LeadSources", leadSources) :
                new ObjectParameter("LeadSources", typeof(string));
    
            var pRsParameter = pRs != null ?
                new ObjectParameter("PRs", pRs) :
                new ObjectParameter("PRs", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            var filterDepositParameter = filterDeposit.HasValue ?
                new ObjectParameter("FilterDeposit", filterDeposit) :
                new ObjectParameter("FilterDeposit", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptProductionByWaveSalesRoom>("USP_IM_RptProductionByWaveSalesRoom", dateFromParameter, dateToParameter, leadSourcesParameter, pRsParameter, programParameter, filterDepositParameter);
        }
    
        public virtual ObjectResult<RptWeeklyMonthlyHostess_ByPR> USP_IM_RptWeeklyMonthlyHostess(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptWeeklyMonthlyHostess_ByPR>("USP_IM_RptWeeklyMonthlyHostess", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<RptGiftsManifestCancel> USP_OR_RptGiftsManifestCancel(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsManifestCancel>("USP_OR_RptGiftsManifestCancel", dateFromParameter, dateToParameter, salesRoomsParameter);
        }
    
        public virtual ObjectResult<CxCData> USP_OR_GetCxC(Nullable<bool> authorized, string salesRoom, string user, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string leadSource, string pR)
        {
            var authorizedParameter = authorized.HasValue ?
                new ObjectParameter("Authorized", authorized) :
                new ObjectParameter("Authorized", typeof(bool));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CxCData>("USP_OR_GetCxC", authorizedParameter, salesRoomParameter, userParameter, dateFromParameter, dateToParameter, leadSourceParameter, pRParameter);
        }
    
        public virtual int USP_OR_RptGiftsKardex(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string warehouse, string gifts)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_RptGiftsKardex", dateFromParameter, dateToParameter, warehouseParameter, giftsParameter);
        }
    
        public virtual ObjectResult<RptGiftsKardex> USP_IM_RptGiftsKardex(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string warehouse, string gifts)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var warehouseParameter = warehouse != null ?
                new ObjectParameter("Warehouse", warehouse) :
                new ObjectParameter("Warehouse", typeof(string));
    
            var giftsParameter = gifts != null ?
                new ObjectParameter("Gifts", gifts) :
                new ObjectParameter("Gifts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsKardex>("USP_IM_RptGiftsKardex", dateFromParameter, dateToParameter, warehouseParameter, giftsParameter);
        }
    
        public virtual ObjectResult<RptManifestByLSRange> USP_IM_RptManifestByLSRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptManifestByLSRange>("USP_IM_RptManifestByLSRange", dateFromParameter, dateToParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<RptManifestRange> USP_IM_RptManifestRange(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string program)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var programParameter = program != null ?
                new ObjectParameter("Program", program) :
                new ObjectParameter("Program", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptManifestRange>("USP_IM_RptManifestRange", dateFromParameter, dateToParameter, salesRoomParameter, programParameter);
        }
    
        public virtual ObjectResult<DepositToRefund> USP_OR_GetBookingDepositsByGuest(Nullable<int> guestID, Nullable<int> refundID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var refundIDParameter = refundID.HasValue ?
                new ObjectParameter("RefundID", refundID) :
                new ObjectParameter("RefundID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepositToRefund>("USP_OR_GetBookingDepositsByGuest", guestIDParameter, refundIDParameter);
        }
    
        public virtual ObjectResult<DepositsRefund> USP_OR_GetDepositsRefund(Nullable<int> guest, Nullable<int> refundID, string folio, string name, string reservation, string outInv, string pR, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var refundIDParameter = refundID.HasValue ?
                new ObjectParameter("RefundID", refundID) :
                new ObjectParameter("RefundID", typeof(int));
    
            var folioParameter = folio != null ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var reservationParameter = reservation != null ?
                new ObjectParameter("Reservation", reservation) :
                new ObjectParameter("Reservation", typeof(string));
    
            var outInvParameter = outInv != null ?
                new ObjectParameter("OutInv", outInv) :
                new ObjectParameter("OutInv", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepositsRefund>("USP_OR_GetDepositsRefund", guestParameter, refundIDParameter, folioParameter, nameParameter, reservationParameter, outInvParameter, pRParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<GiftsReceiptLogData> USP_OR_GetGiftsReceiptLog(Nullable<int> receipt)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftsReceiptLogData>("USP_OR_GetGiftsReceiptLog", receiptParameter);
        }
    
        public virtual ObjectResult<DepositsRefundShort> USP_OR_SaveDepositsRefund(Nullable<int> guestID, Nullable<int> folio, string refundType, string deposits)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var folioParameter = folio.HasValue ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(int));
    
            var refundTypeParameter = refundType != null ?
                new ObjectParameter("RefundType", refundType) :
                new ObjectParameter("RefundType", typeof(string));
    
            var depositsParameter = deposits != null ?
                new ObjectParameter("Deposits", deposits) :
                new ObjectParameter("Deposits", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DepositsRefundShort>("USP_OR_SaveDepositsRefund", guestIDParameter, folioParameter, refundTypeParameter, depositsParameter);
        }
    
        public virtual int USP_OR_UpdateRefundFolio(string refundTypeID, Nullable<int> folio)
        {
            var refundTypeIDParameter = refundTypeID != null ?
                new ObjectParameter("RefundTypeID", refundTypeID) :
                new ObjectParameter("RefundTypeID", typeof(string));
    
            var folioParameter = folio.HasValue ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateRefundFolio", refundTypeIDParameter, folioParameter);
        }
    
        public virtual ObjectResult<ValidationData> USP_OR_ValidateShow(string changedBy, string password, string salesRoom, string agency, string country, string pR1, string pR2, string pR3, string liner1, string liner2, string closer1, string closer2, string closer3, string exit1, string exit2, string podium, string vLO, string entryHost, string giftsHost, string exitHost)
        {
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var pR1Parameter = pR1 != null ?
                new ObjectParameter("PR1", pR1) :
                new ObjectParameter("PR1", typeof(string));
    
            var pR2Parameter = pR2 != null ?
                new ObjectParameter("PR2", pR2) :
                new ObjectParameter("PR2", typeof(string));
    
            var pR3Parameter = pR3 != null ?
                new ObjectParameter("PR3", pR3) :
                new ObjectParameter("PR3", typeof(string));
    
            var liner1Parameter = liner1 != null ?
                new ObjectParameter("Liner1", liner1) :
                new ObjectParameter("Liner1", typeof(string));
    
            var liner2Parameter = liner2 != null ?
                new ObjectParameter("Liner2", liner2) :
                new ObjectParameter("Liner2", typeof(string));
    
            var closer1Parameter = closer1 != null ?
                new ObjectParameter("Closer1", closer1) :
                new ObjectParameter("Closer1", typeof(string));
    
            var closer2Parameter = closer2 != null ?
                new ObjectParameter("Closer2", closer2) :
                new ObjectParameter("Closer2", typeof(string));
    
            var closer3Parameter = closer3 != null ?
                new ObjectParameter("Closer3", closer3) :
                new ObjectParameter("Closer3", typeof(string));
    
            var exit1Parameter = exit1 != null ?
                new ObjectParameter("Exit1", exit1) :
                new ObjectParameter("Exit1", typeof(string));
    
            var exit2Parameter = exit2 != null ?
                new ObjectParameter("Exit2", exit2) :
                new ObjectParameter("Exit2", typeof(string));
    
            var podiumParameter = podium != null ?
                new ObjectParameter("Podium", podium) :
                new ObjectParameter("Podium", typeof(string));
    
            var vLOParameter = vLO != null ?
                new ObjectParameter("VLO", vLO) :
                new ObjectParameter("VLO", typeof(string));
    
            var entryHostParameter = entryHost != null ?
                new ObjectParameter("EntryHost", entryHost) :
                new ObjectParameter("EntryHost", typeof(string));
    
            var giftsHostParameter = giftsHost != null ?
                new ObjectParameter("GiftsHost", giftsHost) :
                new ObjectParameter("GiftsHost", typeof(string));
    
            var exitHostParameter = exitHost != null ?
                new ObjectParameter("ExitHost", exitHost) :
                new ObjectParameter("ExitHost", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationData>("USP_OR_ValidateShow", changedByParameter, passwordParameter, salesRoomParameter, agencyParameter, countryParameter, pR1Parameter, pR2Parameter, pR3Parameter, liner1Parameter, liner2Parameter, closer1Parameter, closer2Parameter, closer3Parameter, exit1Parameter, exit2Parameter, podiumParameter, vLOParameter, entryHostParameter, giftsHostParameter, exitHostParameter);
        }
    
        public virtual ObjectResult<RptManifest> USP_IM_RptManifest(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string salesmanID, string salesmanRoles, string segments, string programs, Nullable<bool> bySegmentsCategories, Nullable<bool> byLocationsCategories)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var salesmanRolesParameter = salesmanRoles != null ?
                new ObjectParameter("SalesmanRoles", salesmanRoles) :
                new ObjectParameter("SalesmanRoles", typeof(string));
    
            var segmentsParameter = segments != null ?
                new ObjectParameter("Segments", segments) :
                new ObjectParameter("Segments", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var bySegmentsCategoriesParameter = bySegmentsCategories.HasValue ?
                new ObjectParameter("BySegmentsCategories", bySegmentsCategories) :
                new ObjectParameter("BySegmentsCategories", typeof(bool));
    
            var byLocationsCategoriesParameter = byLocationsCategories.HasValue ?
                new ObjectParameter("ByLocationsCategories", byLocationsCategories) :
                new ObjectParameter("ByLocationsCategories", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptManifest>("USP_IM_RptManifest", dateFromParameter, dateToParameter, salesRoomParameter, salesmanIDParameter, salesmanRolesParameter, segmentsParameter, programsParameter, bySegmentsCategoriesParameter, byLocationsCategoriesParameter);
        }
    
        public virtual ObjectResult<WholesalerData> USP_OR_GetWholesalers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<WholesalerData>("USP_OR_GetWholesalers");
        }
    
        public virtual ObjectResult<AddGiftReceiptPayment> USP_OR_AddGiftReceiptPayment(Nullable<int> giftReceiptID, string receivedBy, Nullable<System.DateTime> receivedDate, Nullable<decimal> uSDAmount, Nullable<decimal> rateAmount, Nullable<decimal> mXNAmount)
        {
            var giftReceiptIDParameter = giftReceiptID.HasValue ?
                new ObjectParameter("GiftReceiptID", giftReceiptID) :
                new ObjectParameter("GiftReceiptID", typeof(int));
    
            var receivedByParameter = receivedBy != null ?
                new ObjectParameter("ReceivedBy", receivedBy) :
                new ObjectParameter("ReceivedBy", typeof(string));
    
            var receivedDateParameter = receivedDate.HasValue ?
                new ObjectParameter("ReceivedDate", receivedDate) :
                new ObjectParameter("ReceivedDate", typeof(System.DateTime));
    
            var uSDAmountParameter = uSDAmount.HasValue ?
                new ObjectParameter("USDAmount", uSDAmount) :
                new ObjectParameter("USDAmount", typeof(decimal));
    
            var rateAmountParameter = rateAmount.HasValue ?
                new ObjectParameter("RateAmount", rateAmount) :
                new ObjectParameter("RateAmount", typeof(decimal));
    
            var mXNAmountParameter = mXNAmount.HasValue ?
                new ObjectParameter("MXNAmount", mXNAmount) :
                new ObjectParameter("MXNAmount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AddGiftReceiptPayment>("USP_OR_AddGiftReceiptPayment", giftReceiptIDParameter, receivedByParameter, receivedDateParameter, uSDAmountParameter, rateAmountParameter, mXNAmountParameter);
        }
    
        public virtual int USP_OR_DeletePersonnel(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_DeletePersonnel", userParameter);
        }
    
        public virtual ObjectResult<SaleLogData> USP_OR_GetSaleLog(Nullable<int> sale)
        {
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SaleLogData>("USP_OR_GetSaleLog", saleParameter);
        }
    
        public virtual ObjectResult<SalesmenChanges> USP_OR_GetSalesmenChanges(Nullable<int> sale)
        {
            var saleParameter = sale.HasValue ?
                new ObjectParameter("Sale", sale) :
                new ObjectParameter("Sale", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SalesmenChanges>("USP_OR_GetSalesmenChanges", saleParameter);
        }
    
        public virtual ObjectResult<GuestMovements> USP_OR_GetGuestMovements(Nullable<int> guest)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestMovements>("USP_OR_GetGuestMovements", guestParameter);
        }
    
        public virtual ObjectResult<PersonnelStatistics> USP_OR_GetPersonnelStatistics(string user)
        {
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PersonnelStatistics>("USP_OR_GetPersonnelStatistics", userParameter);
        }
    
        public virtual int USP_OR_UpdatePersonnelId(string old, string @new)
        {
            var oldParameter = old != null ?
                new ObjectParameter("Old", old) :
                new ObjectParameter("Old", typeof(string));
    
            var newParameter = @new != null ?
                new ObjectParameter("New", @new) :
                new ObjectParameter("New", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdatePersonnelId", oldParameter, newParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_OR_IsUsedGuestPromotion(Nullable<int> receipt, string gift)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_OR_IsUsedGuestPromotion", receiptParameter, giftParameter);
        }
    
        public virtual ObjectResult<RptUpList> USP_IM_RptUpList(Nullable<System.DateTime> dateFrom, string salesRooms, Nullable<int> upListType)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var upListTypeParameter = upListType.HasValue ?
                new ObjectParameter("UpListType", upListType) :
                new ObjectParameter("UpListType", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptUpList>("USP_IM_RptUpList", dateFromParameter, salesRoomsParameter, upListTypeParameter);
        }
    
        public virtual ObjectResult<RptFTMInOutHouse> USP_IM_RptFTMInOutHouse(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string salesmanID)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptFTMInOutHouse>("USP_IM_RptFTMInOutHouse", dateFromParameter, dateToParameter, salesRoomsParameter, salesmanIDParameter);
        }
    
        public virtual ObjectResult<GiftLogData> USP_OR_GetGiftLog(string gift)
        {
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GiftLogData>("USP_OR_GetGiftLog", giftParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomToLeadSource(string leadSourceFrom, string leadSourceTo)
        {
            var leadSourceFromParameter = leadSourceFrom != null ?
                new ObjectParameter("LeadSourceFrom", leadSourceFrom) :
                new ObjectParameter("LeadSourceFrom", typeof(string));
    
            var leadSourceToParameter = leadSourceTo != null ?
                new ObjectParameter("LeadSourceTo", leadSourceTo) :
                new ObjectParameter("LeadSourceTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomToLeadSource", leadSourceFromParameter, leadSourceToParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomToLeadSourcesOfProgram(string leadSource)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomToLeadSourcesOfProgram", leadSourceParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomToSalesRoom(string salesRoomFrom, string salesRoomTo)
        {
            var salesRoomFromParameter = salesRoomFrom != null ?
                new ObjectParameter("SalesRoomFrom", salesRoomFrom) :
                new ObjectParameter("SalesRoomFrom", typeof(string));
    
            var salesRoomToParameter = salesRoomTo != null ?
                new ObjectParameter("SalesRoomTo", salesRoomTo) :
                new ObjectParameter("SalesRoomTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomToSalesRoom", salesRoomFromParameter, salesRoomToParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToLeadSource(string leadSourceFrom, string leadSourceTo)
        {
            var leadSourceFromParameter = leadSourceFrom != null ?
                new ObjectParameter("LeadSourceFrom", leadSourceFrom) :
                new ObjectParameter("LeadSourceFrom", typeof(string));
    
            var leadSourceToParameter = leadSourceTo != null ?
                new ObjectParameter("LeadSourceTo", leadSourceTo) :
                new ObjectParameter("LeadSourceTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToLeadSource", leadSourceFromParameter, leadSourceToParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToLeadSourcesOfProgram(string leadSource)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToLeadSourcesOfProgram", leadSourceParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToSalesRoom(string salesRoomFrom, string salesRoomTo)
        {
            var salesRoomFromParameter = salesRoomFrom != null ?
                new ObjectParameter("SalesRoomFrom", salesRoomFrom) :
                new ObjectParameter("SalesRoomFrom", typeof(string));
    
            var salesRoomToParameter = salesRoomTo != null ?
                new ObjectParameter("SalesRoomTo", salesRoomTo) :
                new ObjectParameter("SalesRoomTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToSalesRoom", salesRoomFromParameter, salesRoomToParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToSalesRoomsWeekDaysOfLeadSource(string leadSource, string salesRoom, Nullable<byte> weekDay)
        {
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var weekDayParameter = weekDay.HasValue ?
                new ObjectParameter("WeekDay", weekDay) :
                new ObjectParameter("WeekDay", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesByLeadSourceSalesRoomWeekDayToSalesRoomsWeekDaysOfLeadSource", leadSourceParameter, salesRoomParameter, weekDayParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesBySalesRoomWeekDayToSalesRoom(string salesRoomFrom, string salesRoomTo)
        {
            var salesRoomFromParameter = salesRoomFrom != null ?
                new ObjectParameter("SalesRoomFrom", salesRoomFrom) :
                new ObjectParameter("SalesRoomFrom", typeof(string));
    
            var salesRoomToParameter = salesRoomTo != null ?
                new ObjectParameter("SalesRoomTo", salesRoomTo) :
                new ObjectParameter("SalesRoomTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesBySalesRoomWeekDayToSalesRoom", salesRoomFromParameter, salesRoomToParameter);
        }
    
        public virtual int USP_OR_CopyTourTimesBySalesRoomWeekDayToWeekDaysOfSalesRoom(string salesRoom, Nullable<byte> weekDay)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var weekDayParameter = weekDay.HasValue ?
                new ObjectParameter("WeekDay", weekDay) :
                new ObjectParameter("WeekDay", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_CopyTourTimesBySalesRoomWeekDayToWeekDaysOfSalesRoom", salesRoomParameter, weekDayParameter);
        }
    
        public virtual ObjectResult<RptStatisticsBySegments> USP_IM_RptStatisticsBySegments(string datesFrom, string datesTo, string salesRooms, string salesmanID, Nullable<bool> bySegmentsCategories, Nullable<bool> own, Nullable<bool> includeAllSalesmen)
        {
            var datesFromParameter = datesFrom != null ?
                new ObjectParameter("DatesFrom", datesFrom) :
                new ObjectParameter("DatesFrom", typeof(string));
    
            var datesToParameter = datesTo != null ?
                new ObjectParameter("DatesTo", datesTo) :
                new ObjectParameter("DatesTo", typeof(string));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var bySegmentsCategoriesParameter = bySegmentsCategories.HasValue ?
                new ObjectParameter("BySegmentsCategories", bySegmentsCategories) :
                new ObjectParameter("BySegmentsCategories", typeof(bool));
    
            var ownParameter = own.HasValue ?
                new ObjectParameter("Own", own) :
                new ObjectParameter("Own", typeof(bool));
    
            var includeAllSalesmenParameter = includeAllSalesmen.HasValue ?
                new ObjectParameter("IncludeAllSalesmen", includeAllSalesmen) :
                new ObjectParameter("IncludeAllSalesmen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsBySegments>("USP_IM_RptStatisticsBySegments", datesFromParameter, datesToParameter, salesRoomsParameter, salesmanIDParameter, bySegmentsCategoriesParameter, ownParameter, includeAllSalesmenParameter);
        }
    
        public virtual ObjectResult<RptGiftsReceipt> USP_OR_RptGiftsReceipt(Nullable<int> receipt, Nullable<bool> isCharge)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var isChargeParameter = isCharge.HasValue ?
                new ObjectParameter("IsCharge", isCharge) :
                new ObjectParameter("IsCharge", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGiftsReceipt>("USP_OR_RptGiftsReceipt", receiptParameter, isChargeParameter);
        }
    
        public virtual ObjectResult<LocationShort> USP_OR_GetLocations(string programs, Nullable<byte> status, string regions)
        {
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var regionsParameter = regions != null ?
                new ObjectParameter("Regions", regions) :
                new ObjectParameter("Regions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LocationShort>("USP_OR_GetLocations", programsParameter, statusParameter, regionsParameter);
        }
    
        public virtual int USP_OR_DeleteGuestPromotion(Nullable<int> receipt, string gift)
        {
            var receiptParameter = receipt.HasValue ?
                new ObjectParameter("Receipt", receipt) :
                new ObjectParameter("Receipt", typeof(int));
    
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_DeleteGuestPromotion", receiptParameter, giftParameter);
        }
    
        public virtual ObjectResult<RptRefundLetter> USP_OR_RptRefundLetter(Nullable<int> refundID)
        {
            var refundIDParameter = refundID.HasValue ?
                new ObjectParameter("RefundID", refundID) :
                new ObjectParameter("RefundID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptRefundLetter>("USP_OR_RptRefundLetter", refundIDParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByCloser> USP_IM_RptStatisticsByCloser(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string salesmanID, string segments, string programs, Nullable<bool> includeAllSalesmen, Nullable<bool> groupByTeams)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var segmentsParameter = segments != null ?
                new ObjectParameter("Segments", segments) :
                new ObjectParameter("Segments", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var includeAllSalesmenParameter = includeAllSalesmen.HasValue ?
                new ObjectParameter("IncludeAllSalesmen", includeAllSalesmen) :
                new ObjectParameter("IncludeAllSalesmen", typeof(bool));
    
            var groupByTeamsParameter = groupByTeams.HasValue ?
                new ObjectParameter("GroupByTeams", groupByTeams) :
                new ObjectParameter("GroupByTeams", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByCloser>("USP_IM_RptStatisticsByCloser", dateFromParameter, dateToParameter, salesRoomParameter, salesmanIDParameter, segmentsParameter, programsParameter, includeAllSalesmenParameter, groupByTeamsParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByExitCloser> USP_IM_RptStatisticsByExitCloser(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string salesmanID, string segments, string programs, Nullable<bool> includeAllSalesmen)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var segmentsParameter = segments != null ?
                new ObjectParameter("Segments", segments) :
                new ObjectParameter("Segments", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var includeAllSalesmenParameter = includeAllSalesmen.HasValue ?
                new ObjectParameter("IncludeAllSalesmen", includeAllSalesmen) :
                new ObjectParameter("IncludeAllSalesmen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByExitCloser>("USP_IM_RptStatisticsByExitCloser", dateFromParameter, dateToParameter, salesRoomParameter, salesmanIDParameter, segmentsParameter, programsParameter, includeAllSalesmenParameter);
        }
    
        public virtual ObjectResult<MealTicketData> USP_OR_GetMealTicketByFolio(Nullable<int> meID, Nullable<int> folio, string authorized)
        {
            var meIDParameter = meID.HasValue ?
                new ObjectParameter("meID", meID) :
                new ObjectParameter("meID", typeof(int));
    
            var folioParameter = folio.HasValue ?
                new ObjectParameter("Folio", folio) :
                new ObjectParameter("Folio", typeof(int));
    
            var authorizedParameter = authorized != null ?
                new ObjectParameter("Authorized", authorized) :
                new ObjectParameter("Authorized", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<MealTicketData>("USP_OR_GetMealTicketByFolio", meIDParameter, folioParameter, authorizedParameter);
        }
    
        public virtual int USP_OR_SaveGiftLog(string gift, Nullable<short> hoursDif, string changedBy)
        {
            var giftParameter = gift != null ?
                new ObjectParameter("Gift", gift) :
                new ObjectParameter("Gift", typeof(string));
    
            var hoursDifParameter = hoursDif.HasValue ?
                new ObjectParameter("HoursDif", hoursDif) :
                new ObjectParameter("HoursDif", typeof(short));
    
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SaveGiftLog", giftParameter, hoursDifParameter, changedByParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByFTB> USP_IM_RptStatisticsByFTB(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string salesmanID, string segments, string programs, Nullable<bool> groupedByTeam, Nullable<bool> includeAllSalesmen)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var segmentsParameter = segments != null ?
                new ObjectParameter("Segments", segments) :
                new ObjectParameter("Segments", typeof(string));
    
            var programsParameter = programs != null ?
                new ObjectParameter("Programs", programs) :
                new ObjectParameter("Programs", typeof(string));
    
            var groupedByTeamParameter = groupedByTeam.HasValue ?
                new ObjectParameter("GroupedByTeam", groupedByTeam) :
                new ObjectParameter("GroupedByTeam", typeof(bool));
    
            var includeAllSalesmenParameter = includeAllSalesmen.HasValue ?
                new ObjectParameter("IncludeAllSalesmen", includeAllSalesmen) :
                new ObjectParameter("IncludeAllSalesmen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByFTB>("USP_IM_RptStatisticsByFTB", dateFromParameter, dateToParameter, salesRoomParameter, salesmanIDParameter, segmentsParameter, programsParameter, groupedByTeamParameter, includeAllSalesmenParameter);
        }
    
        public virtual ObjectResult<RptGuestRegistration> USP_OR_RptGuestRegistration(Nullable<int> guestID)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptGuestRegistration>("USP_OR_RptGuestRegistration", guestIDParameter);
        }
    
        public virtual ObjectResult<RptSelfGenTeam> USP_IM_RptSelfGenTeam(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRooms, string salesmanID)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomsParameter = salesRooms != null ?
                new ObjectParameter("SalesRooms", salesRooms) :
                new ObjectParameter("SalesRooms", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptSelfGenTeam>("USP_IM_RptSelfGenTeam", dateFromParameter, dateToParameter, salesRoomsParameter, salesmanIDParameter);
        }
    
        public virtual int USP_OR_UpdateGuestReimpresionMotive(Nullable<int> guest, Nullable<byte> reimpresionMotive)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var reimpresionMotiveParameter = reimpresionMotive.HasValue ?
                new ObjectParameter("ReimpresionMotive", reimpresionMotive) :
                new ObjectParameter("ReimpresionMotive", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGuestReimpresionMotive", guestParameter, reimpresionMotiveParameter);
        }
    
        public virtual int USP_OR_UpdateGuestReimpresionNumber(Nullable<int> guest)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGuestReimpresionNumber", guestParameter);
        }
    
        public virtual ObjectResult<EfficiencyData> USP_IM_GetEfficiencyByWeeks(string salesRoom, Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EfficiencyData>("USP_IM_GetEfficiencyByWeeks", salesRoomParameter, dateFromParameter, dateToParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByFTBCategories> USP_IM_RptStatisticsByFTBCategories(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string salesmanID, Nullable<bool> groupedByTeam, Nullable<bool> includeAllSalesmen)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var groupedByTeamParameter = groupedByTeam.HasValue ?
                new ObjectParameter("GroupedByTeam", groupedByTeam) :
                new ObjectParameter("GroupedByTeam", typeof(bool));
    
            var includeAllSalesmenParameter = includeAllSalesmen.HasValue ?
                new ObjectParameter("IncludeAllSalesmen", includeAllSalesmen) :
                new ObjectParameter("IncludeAllSalesmen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByFTBCategories>("USP_IM_RptStatisticsByFTBCategories", dateFromParameter, dateToParameter, salesRoomParameter, salesmanIDParameter, groupedByTeamParameter, includeAllSalesmenParameter);
        }
    
        public virtual ObjectResult<RptStatisticsByFTBLocations> USP_IM_RptStatisticsByFTBLocations(Nullable<System.DateTime> dateFrom, Nullable<System.DateTime> dateTo, string salesRoom, string salesmanID, Nullable<bool> groupedByTeam, Nullable<bool> includeAllSalesmen)
        {
            var dateFromParameter = dateFrom.HasValue ?
                new ObjectParameter("DateFrom", dateFrom) :
                new ObjectParameter("DateFrom", typeof(System.DateTime));
    
            var dateToParameter = dateTo.HasValue ?
                new ObjectParameter("DateTo", dateTo) :
                new ObjectParameter("DateTo", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var salesmanIDParameter = salesmanID != null ?
                new ObjectParameter("SalesmanID", salesmanID) :
                new ObjectParameter("SalesmanID", typeof(string));
    
            var groupedByTeamParameter = groupedByTeam.HasValue ?
                new ObjectParameter("GroupedByTeam", groupedByTeam) :
                new ObjectParameter("GroupedByTeam", typeof(bool));
    
            var includeAllSalesmenParameter = includeAllSalesmen.HasValue ?
                new ObjectParameter("IncludeAllSalesmen", includeAllSalesmen) :
                new ObjectParameter("IncludeAllSalesmen", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptStatisticsByFTBLocations>("USP_IM_RptStatisticsByFTBLocations", dateFromParameter, dateToParameter, salesRoomParameter, salesmanIDParameter, groupedByTeamParameter, includeAllSalesmenParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> USP_OR_EsFrontToMiddle(string personnelID, string pR1, string pR2, string pR3)
        {
            var personnelIDParameter = personnelID != null ?
                new ObjectParameter("PersonnelID", personnelID) :
                new ObjectParameter("PersonnelID", typeof(string));
    
            var pR1Parameter = pR1 != null ?
                new ObjectParameter("PR1", pR1) :
                new ObjectParameter("PR1", typeof(string));
    
            var pR2Parameter = pR2 != null ?
                new ObjectParameter("PR2", pR2) :
                new ObjectParameter("PR2", typeof(string));
    
            var pR3Parameter = pR3 != null ?
                new ObjectParameter("PR3", pR3) :
                new ObjectParameter("PR3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("USP_OR_EsFrontToMiddle", personnelIDParameter, pR1Parameter, pR2Parameter, pR3Parameter);
        }
    
        public virtual ObjectResult<RptEfficiencyWeekly> USP_IM_RptEfficiencyWeekly(string salesRoom, string datesFrom, string datesTo)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var datesFromParameter = datesFrom != null ?
                new ObjectParameter("DatesFrom", datesFrom) :
                new ObjectParameter("DatesFrom", typeof(string));
    
            var datesToParameter = datesTo != null ?
                new ObjectParameter("DatesTo", datesTo) :
                new ObjectParameter("DatesTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RptEfficiencyWeekly>("USP_IM_RptEfficiencyWeekly", salesRoomParameter, datesFromParameter, datesToParameter);
        }
    
        public virtual ObjectResult<PostShort> USP_OR_ObtenerPuestoDePersonalPorFecha(string personnelID, Nullable<System.DateTime> date)
        {
            var personnelIDParameter = personnelID != null ?
                new ObjectParameter("PersonnelID", personnelID) :
                new ObjectParameter("PersonnelID", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PostShort>("USP_OR_ObtenerPuestoDePersonalPorFecha", personnelIDParameter, dateParameter);
        }
    
        public virtual ObjectResult<string> USP_OR_FolioValidCXC(Nullable<int> number, Nullable<int> guestID, Nullable<bool> active, Nullable<int> action)
        {
            var numberParameter = number.HasValue ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(int));
    
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var actionParameter = action.HasValue ?
                new ObjectParameter("Action", action) :
                new ObjectParameter("Action", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("USP_OR_FolioValidCXC", numberParameter, guestIDParameter, activeParameter, actionParameter);
        }
    
        public virtual int USP_OR_SetAccountingCode(Nullable<int> guestID, string activity)
        {
            var guestIDParameter = guestID.HasValue ?
                new ObjectParameter("GuestID", guestID) :
                new ObjectParameter("GuestID", typeof(int));
    
            var activityParameter = activity != null ?
                new ObjectParameter("Activity", activity) :
                new ObjectParameter("Activity", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_SetAccountingCode", guestIDParameter, activityParameter);
        }
    
        public virtual int USP_IM_ADDEfficiencySalesmen(Nullable<int> efficiencyID, string salemanID)
        {
            var efficiencyIDParameter = efficiencyID.HasValue ?
                new ObjectParameter("EfficiencyID", efficiencyID) :
                new ObjectParameter("EfficiencyID", typeof(int));
    
            var salemanIDParameter = salemanID != null ?
                new ObjectParameter("SalemanID", salemanID) :
                new ObjectParameter("SalemanID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_IM_ADDEfficiencySalesmen", efficiencyIDParameter, salemanIDParameter);
        }
    
        public virtual int USP_IM_DeleteEfficiencySalesmen(Nullable<int> efficiencyID)
        {
            var efficiencyIDParameter = efficiencyID.HasValue ?
                new ObjectParameter("EfficiencyID", efficiencyID) :
                new ObjectParameter("EfficiencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_IM_DeleteEfficiencySalesmen", efficiencyIDParameter);
        }
    
        public virtual int USP_IM_SaveGuestAdditional(Nullable<int> guID, string additionalGuestID)
        {
            var guIDParameter = guID.HasValue ?
                new ObjectParameter("guID", guID) :
                new ObjectParameter("guID", typeof(int));
    
            var additionalGuestIDParameter = additionalGuestID != null ?
                new ObjectParameter("AdditionalGuestID", additionalGuestID) :
                new ObjectParameter("AdditionalGuestID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_IM_SaveGuestAdditional", guIDParameter, additionalGuestIDParameter);
        }
    
        public virtual int USP_OR_UpdateGuestsAdditional(Nullable<int> guest, string pR, Nullable<System.DateTime> date, string location, Nullable<bool> invited)
        {
            var guestParameter = guest.HasValue ?
                new ObjectParameter("Guest", guest) :
                new ObjectParameter("Guest", typeof(int));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var invitedParameter = invited.HasValue ?
                new ObjectParameter("Invited", invited) :
                new ObjectParameter("Invited", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("USP_OR_UpdateGuestsAdditional", guestParameter, pRParameter, dateParameter, locationParameter, invitedParameter);
        }
    
        public virtual ObjectResult<ValidationData> USP_OR_ValidateInvitation(string changedBy, string pR, string location, string leadSource, string salesRoom, string agency, string country)
        {
            var changedByParameter = changedBy != null ?
                new ObjectParameter("ChangedBy", changedBy) :
                new ObjectParameter("ChangedBy", typeof(string));
    
            var pRParameter = pR != null ?
                new ObjectParameter("PR", pR) :
                new ObjectParameter("PR", typeof(string));
    
            var locationParameter = location != null ?
                new ObjectParameter("Location", location) :
                new ObjectParameter("Location", typeof(string));
    
            var leadSourceParameter = leadSource != null ?
                new ObjectParameter("LeadSource", leadSource) :
                new ObjectParameter("LeadSource", typeof(string));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            var agencyParameter = agency != null ?
                new ObjectParameter("Agency", agency) :
                new ObjectParameter("Agency", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ValidationData>("USP_OR_ValidateInvitation", changedByParameter, pRParameter, locationParameter, leadSourceParameter, salesRoomParameter, agencyParameter, countryParameter);
        }
    }
}
