//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IM.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class IMEntities : DbContext
    {
        public IMEntities()
            : base("name=IMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Guest> Guests { get; set; }
        public virtual DbSet<SalesRoom> SalesRooms { get; set; }
    
        public virtual ObjectResult<GetCountries> USP_OR_GetCountries(Nullable<byte> status)
        {
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCountries>("USP_OR_GetCountries", statusParameter);
        }
    
        public virtual ObjectResult<GuestPremanifestHost> GetPremanifestHost(Nullable<System.DateTime> date, string salesRoom)
        {
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GuestPremanifestHost>("GetPremanifestHost", dateParameter, salesRoomParameter);
        }
    
        public virtual ObjectResult<USP_OR_GetSalesRoom_Result> USP_OR_GetSalesRoom(string salesRoom)
        {
            var salesRoomParameter = salesRoom != null ?
                new ObjectParameter("SalesRoom", salesRoom) :
                new ObjectParameter("SalesRoom", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<USP_OR_GetSalesRoom_Result>("USP_OR_GetSalesRoom", salesRoomParameter);
        }
    }
}
