<Window
        x:Class="IM.Outhouse.Forms.frmOuthouse"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IM.Outhouse.Forms"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"  
        xmlns:Classes="clr-namespace:IM.Model.Classes;assembly=IM.Model" 
        mc:Ignorable="d" Loaded="Window_Loaded" KeyDown="Window_KeyDown"
        Width="1100"  Height="700" Title="Outhouse" WindowState="Maximized" 
     IsKeyboardFocusWithinChanged="OnIsKeyboardFocusWithinChanged">
    <Window.Resources>
        <CollectionViewSource x:Key="outPremanifestViewSource" d:DesignSource="{d:DesignInstance {x:Type Classes:GuestPremanifestOuthouse}, CreateList=True}"/>
        <Style TargetType="{x:Type Button}" x:Key="btnOptions">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Width" Value="45"/>
            <Setter Property="Background" Value="WhiteSmoke"/>
            <Setter Property="Margin" Value="2"/>
        </Style>
        <Style TargetType="{x:Type Image}" x:Key="ImageOptions">
            <Setter Property="Width" Value="24"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}" x:Key="txtOptions">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="9"/>
            <Setter Property="ForceCursor" Value="True"/>
            <Setter Property="FontWeight" Value="Black"/>
        </Style>
        <Style TargetType="{x:Type GroupBox}">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Background" Value="Bisque"/>
        </Style>
    </Window.Resources>
    <xctk:BusyIndicator x:Name="BusyIndicator" >
        <Grid>
            <!--#region Grid Principal -->
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="86*"/>
                <RowDefinition Height="AUTO"/>
            </Grid.RowDefinitions>
            <!--#endregion-->
            <Grid Grid.Row="0" Background="Beige">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="86*"/>
                </Grid.ColumnDefinitions>
                <!--#region Botones-->
                <GroupBox x:Name="grbMenu" Grid.Column="0" Header="Options">
                    <StackPanel Orientation="Horizontal" >
                        <Button x:Name="btnLogin"  Style="{StaticResource ResourceKey=btnOptions}" Click="btnLogin_Click" >
                            <StackPanel >
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/BUser.png" Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="Login" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="btnPrint"  Style="{StaticResource ResourceKey=btnOptions}" Click="btnPrint_Click" >
                            <StackPanel>
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/BPrinter.png" Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="Print" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="btnNewInv"  Style="{StaticResource ResourceKey=btnOptions}" Click="btnNewInv_Click">
                            <StackPanel>
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/BAdd.png"  Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="New Inv" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="btnAbout"   Style="{StaticResource ResourceKey=btnOptions}" Click="btnAbout_Click">
                            <StackPanel>
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/BAbout.png" Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="About" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="btnTransfer" Grid.Column="1" Style="{StaticResource ResourceKey=btnOptions}" Click="btnTransfer_Click">
                            <StackPanel>
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/Refresh.png" Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="Transfer" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="btnAssistance"  Grid.Column="6" Style="{StaticResource ResourceKey=btnOptions}" Click="btnAssistance_Click">
                            <StackPanel>
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/Assistance.ico" Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="Assist" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="btnDaysOff" Grid.Column="7" Style="{StaticResource ResourceKey=btnOptions}" Click="btnDaysOff_Click">
                            <StackPanel>
                                <Image Source="pack://application:,,,/IM.Styles;component/Images/DaysOff.png" Style="{StaticResource ResourceKey=ImageOptions}"/>
                                <TextBlock Text="DaysOff" Style="{StaticResource ResourceKey=txtOptions}"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </GroupBox>
                <!--#endregion-->
                <GroupBox x:Name="grbInfUser" Grid.Column="2" Header="Informartion User">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Image Grid.Column="0" Grid.RowSpan="2" Source="pack://application:,,,/IM.Styles;component/Images/User.png" Width="38" Height="50" Margin="0,0,9,0"/>
                        <TextBlock Grid.Column="1" Grid.Row="0" x:Name="txtUser" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold" Width="220"><Run Text="USUARIO"/></TextBlock>
                        <TextBlock Grid.Column="1" Grid.Row="1" x:Name="txtLocation" HorizontalAlignment="Left" VerticalAlignment="Center" FontWeight="Bold"  Width="220"><Run Text="NOMBRE LOCACION"/></TextBlock>
                    </Grid>
                </GroupBox>
                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <GroupBox x:Name="grpDate" Header="Date" Width="130">
                        <StackPanel VerticalAlignment="Center" Margin="5,0,5,0">
                            <xctk:DateTimePicker Format="ShortDate" x:Name="dtpDate" ValueChanged="dtpDate_ValueChanged" DefaultValue="{x:Static sys:DateTime.Now}" DisplayDefaultValueOnEmptyText="True"/>
                            <Button x:Name="btnRefresh" Click="btnRefresh_Click" Height="20" Margin="0,4,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="pack://application:,,,/IM.Styles;component/Images/Refresh.png" Width="14" Height="14"/>
                                    <TextBlock Text="Refresh" VerticalAlignment="Center" Padding="10,0,0,0" />
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </GroupBox>
                    <GroupBox x:Name="grpView" Header="View" Width="90">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <RadioButton x:Name="rbtBookD" TabIndex="1" Content="Book D" FontSize="13" IsChecked="True" Checked="rbt_Checked"  Margin="0,5"/>
                            <RadioButton x:Name="rbtInvitD" TabIndex="0" Content=" Invit D" FontSize="13" Checked="rbt_Checked"  Margin="0,5"/>
                        </StackPanel>
                    </GroupBox>
                </StackPanel>
            </Grid>
            <DataGrid DataContext="{StaticResource outPremanifestViewSource}" 
                  Grid.Row="1" Background="#FFF4F5E2" x:Name="dgGuestPremanifest" SelectionUnit ="FullRow"  
                  SelectionMode="Single"  CanUserAddRows="False"  AlternatingRowBackground="Gainsboro"
                  AlternationCount="2" ItemsSource="{Binding}" Margin="7,0"  AutoGenerateColumns="False" CanUserDeleteRows="true" FontSize="14" FontWeight="Medium"
                  EnableRowVirtualization="True"  SelectionChanged="dgGuestPremanifest_SelectionChanged" HorizontalScrollBarVisibility="Visible">
                <DataGrid.Resources>
                    <Style TargetType="DataGridRow">
                        <EventSetter Event="PreviewKeyDown" Handler="dgGuestPremanifest_PreviewKeyDown"/>
                    </Style>
                </DataGrid.Resources>
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="guStatusColumn"  Foreground="White" FontSize="14" FontWeight="Black" Binding="{Binding StatusColumn}" Width="auto" Header="St"  IsReadOnly="True" Visibility="Collapsed" >
                        <DataGridTextColumn.ElementStyle>
                            <Style  TargetType="{x:Type TextBlock}">
                                <Setter Property="HorizontalAlignment" Value="Center" />
                                <Setter Property="Background" Value="{Binding ColorColumn}" />
                                <Setter Property="Width" Value="15" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding guCheckIn}" Value="true">
                                        <Setter Property="Text"  Value="{Binding StatusColumn}" />
                                        <Setter Property="Background"  Value="{Binding ColorColumn}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="guIDColumn" IsReadOnly="True" Binding="{Binding guID}" Header="GUID" Width="auto"/>
                    <DataGridTemplateColumn x:Name="guCheckInColumn" IsReadOnly="False"  Header="In" Width="auto" Visibility="Collapsed">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding guCheckIn, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn x:Name="guRoomNumColumn" IsReadOnly="True"  Binding="{Binding guRoomNum}" Header="Room" Width="auto"/>
                    <DataGridTextColumn x:Name="guLastName1Column" IsReadOnly="True" Binding="{Binding guLastName1}" Header="Last Name" Width="auto"/>
                    <DataGridTextColumn x:Name="guFirstName1Column" IsReadOnly="True"  Binding="{Binding guFirstName1}" Header="First Name" Width="auto"/>
                    <DataGridTextColumn x:Name="guCheckInDColumn" IsReadOnly="True"  Binding="{Binding guCheckInD, StringFormat=dd/MM/yyyy}" Header="Chk-In D" Width="auto" Visibility="Collapsed"/>
                    <DataGridTextColumn x:Name="guCheckOutDColumn" IsReadOnly="True"  Binding="{Binding guCheckOutD, StringFormat=dd/MM/yyyy}" Header="Chk-Out D" Width="auto" Visibility="Collapsed"/>
                    <DataGridTextColumn x:Name="gucoColumn" IsReadOnly="True"  Binding="{Binding guco}" Header="Country ID" Width="auto"/>
                    <DataGridTextColumn x:Name="coNColumn" IsReadOnly="True"  Binding="{Binding coN}" Header="Country" Width="auto"/>
                    <DataGridTextColumn x:Name="guagColumn" IsReadOnly="True"  Binding="{Binding guag}" Header="Agency ID" Width="auto"/>
                    <DataGridTextColumn x:Name="agNColumn" IsReadOnly="True"  Binding="{Binding agN}" Header="Agency" Width="auto"/>
                    <DataGridTemplateColumn x:Name="guAvailColumn" IsReadOnly="False"  Header="Avl" Width="auto" Visibility="Collapsed">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding guAvail, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Center"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTemplateColumn x:Name="guInfoColumn" IsReadOnly="False" Header="Cont" Width="auto">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding guInfo, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Center" Click="Info_Click" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn x:Name="guPRInfoColumn" IsReadOnly="True" Binding="{Binding guPRInfo}" Header="PR Cont" Width="auto"/>
                    <DataGridTextColumn x:Name="guInfoDColumn" IsReadOnly="True" Binding="{Binding guInfoD, StringFormat=dd/MM/yyyy}" Header="Cont D" Width="auto"/>
                    <DataGridTemplateColumn x:Name="guInvitColumn" IsReadOnly="False" Header="Invit" Width="auto">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding guInvit}" Click="Invit_Click"  HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn x:Name="guInvitDColumn" IsReadOnly="True" Binding="{Binding guInvitD, StringFormat=dd/MM/yyyy}" Header="Invit D" Width="auto" Visibility="Collapsed"/>
                    <DataGridTextColumn x:Name="guBookDColumn" IsReadOnly="True" Binding="{Binding guBookD, StringFormat=dd/MM/yyyy}" Header="Book D" Width="auto"/>
                    <DataGridTextColumn x:Name="guBookTColumn" IsReadOnly="True" Binding="{Binding guBookT, StringFormat=HH:mm:ss}" Header="Book T" Width="auto"/>
                    <DataGridTextColumn x:Name="guPRInvit1Column" Binding="{Binding glPRInvit1}" Header="PR B" Width="auto" Visibility="Collapsed"/>
                    <DataGridTextColumn x:Name="guMembershipNumColumn" IsReadOnly="True" Binding="{Binding guMembershipNum}" Header="Member" Width="auto" Visibility="Collapsed"/>
                    <DataGridTemplateColumn x:Name="guBookCancColumn" IsReadOnly="false"  Header="C.Bk" Width="auto" Visibility="Collapsed">
                        <DataGridTemplateColumn.CellTemplate >
                            <DataTemplate>
                                <CheckBox IsChecked="{Binding guBookCanc, Mode=TwoWay, NotifyOnTargetUpdated=True, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridCheckBoxColumn x:Name="guShowColumn" IsReadOnly="True" Binding="{Binding guShow}" Header="Show Up" Width="auto"/>
                    <DataGridCheckBoxColumn x:Name="guSaleColumn" IsReadOnly="True" Binding="{Binding guSale}" Header="Sale" Width="auto"/>
                    <DataGridTemplateColumn  Header="Comments" Width="auto" IsReadOnly="False"  >
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding guComments}"  />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <TextBox x:Name="guCommentsColumnArrival" MaxLength="100" Text="{Binding guComments}" LostFocus="guCommentsColumnArrival_LostFocus" Loaded="guCommentsColumnArrival_Loaded"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <!--#endregion-->
            <!--#region StatusBar -->
            <StatusBar Grid.Row="2" Background="Gray"  x:Name="stbStatusBar" VerticalAlignment="Bottom" Height="22">
                <StatusBarItem  x:Name="StatusBarCap" Content="CAP" Width="50" HorizontalContentAlignment="Center" />
                <StatusBarItem  x:Name="StatusBarNum" Content="NUM" Width="50" HorizontalContentAlignment="Center"/>
                <StatusBarItem  x:Name="StatusBarIns" Content="INS" HorizontalAlignment="Right" Width="50" HorizontalContentAlignment="Center"/>
                <Separator />
                <StatusBarItem x:Name="StatusBarMessage" HorizontalContentAlignment="Center"  Margin="10,0,0,0" >
                    <StackPanel Orientation="Horizontal">
                        <Image x:Name="imgStatusBarMessage" Source="pack://application:,,,/IM.Styles;component/Images/Time.ico" Height="17"  Visibility="Hidden" />
                        <TextBlock x:Name="lblStatusBarMessage"  FontSize="12" VerticalAlignment="Center" Margin="12,0,0,0" />
                    </StackPanel>
                </StatusBarItem>
                <StatusBarItem x:Name="StatusBarReg" Content="0/0" HorizontalAlignment="Right" Width="50"/>
            </StatusBar>
        </Grid>
    </xctk:BusyIndicator>
</Window>



